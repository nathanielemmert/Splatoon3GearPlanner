(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i64_i32_i32_=>_i32 (func (param i64 i32 i32) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i32_i64_i32_=>_i32 (func (param i32 i64 i32) (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "console.error" (func $~lib/bindings/dom/console.error (param i32)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/assembly/JSON/_JSON.handler (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder (mut i32) (i32.const 0))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/assemblyscript-json/assembly/JSON/NULL (mut i32) (i32.const 0))
 (global $assembly/params/json_brand_names (mut i32) (i32.const 0))
 (global $assembly/params/json_brand_data (mut i32) (i32.const 0))
 (global $assembly/params/SkillEasilyToGetParam (mut i32) (i32.const 0))
 (global $assembly/params/Traits (mut i32) (i32.const 0))
 (global $assembly/params/const_max_brand_num (mut i32) (i32.const 0))
 (global $assembly/params/const_max_brand_num_drink (mut i32) (i32.const 0))
 (global $assembly/params/const_get_ability_weight (mut i32) (i32.const 0))
 (global $assembly/process_single_gear/next_ability (mut i32) (i32.const 0))
 (global $assembly/process_all_gear_at_once/global_ticket (mut i32) (i32.const 0))
 (global $assembly/process_all_gear_at_once/global_ticket_prepend (mut i32) (i32.const 0))
 (global $assembly/process_all_gear_at_once/global_ticket_was_used (mut i32) (i32.const 0))
 (global $assembly/process_all_gear_at_once/global_remaining_depth_limit (mut i32) (i32.const 10))
 (global $~lib/rt/__rtti_base i32 (i32.const 15200))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 48264))
 (memory $0 1)
 (data (i32.const 1036) "<")
 (data (i32.const 1048) "\02\00\00\00 \00\00\00I\00n\00k\00 \00S\00a\00v\00e\00r\00 \00(\00M\00a\00i\00n\00)")
 (data (i32.const 1100) "<")
 (data (i32.const 1112) "\02\00\00\00\1e\00\00\00I\00n\00k\00 \00S\00a\00v\00e\00r\00 \00(\00S\00u\00b\00)")
 (data (i32.const 1164) "<")
 (data (i32.const 1176) "\02\00\00\00\1e\00\00\00I\00n\00k\00 \00R\00e\00c\00o\00v\00e\00r\00y\00 \00U\00p")
 (data (i32.const 1228) ",")
 (data (i32.const 1240) "\02\00\00\00\18\00\00\00R\00u\00n\00 \00S\00p\00e\00e\00d\00 \00U\00p")
 (data (i32.const 1276) ",")
 (data (i32.const 1288) "\02\00\00\00\1a\00\00\00S\00w\00i\00m\00 \00S\00p\00e\00e\00d\00 \00U\00p")
 (data (i32.const 1324) "<")
 (data (i32.const 1336) "\02\00\00\00\"\00\00\00S\00p\00e\00c\00i\00a\00l\00 \00C\00h\00a\00r\00g\00e\00 \00U\00p")
 (data (i32.const 1388) ",")
 (data (i32.const 1400) "\02\00\00\00\1a\00\00\00S\00p\00e\00c\00i\00a\00l\00 \00S\00a\00v\00e\00r")
 (data (i32.const 1436) "<")
 (data (i32.const 1448) "\02\00\00\00 \00\00\00S\00p\00e\00c\00i\00a\00l\00 \00P\00o\00w\00e\00r\00 \00U\00p")
 (data (i32.const 1500) ",")
 (data (i32.const 1512) "\02\00\00\00\1a\00\00\00Q\00u\00i\00c\00k\00 \00R\00e\00s\00p\00a\00w\00n")
 (data (i32.const 1548) "<")
 (data (i32.const 1560) "\02\00\00\00 \00\00\00Q\00u\00i\00c\00k\00 \00S\00u\00p\00e\00r\00 \00J\00u\00m\00p")
 (data (i32.const 1612) ",")
 (data (i32.const 1624) "\02\00\00\00\18\00\00\00S\00u\00b\00 \00P\00o\00w\00e\00r\00 \00U\00p")
 (data (i32.const 1660) "<")
 (data (i32.const 1672) "\02\00\00\00\"\00\00\00I\00n\00k\00 \00R\00e\00s\00i\00s\00t\00a\00n\00c\00e\00 \00U\00p")
 (data (i32.const 1724) "<")
 (data (i32.const 1736) "\02\00\00\00\"\00\00\00S\00u\00b\00 \00R\00e\00s\00i\00s\00t\00a\00n\00c\00e\00 \00U\00p")
 (data (i32.const 1788) "<")
 (data (i32.const 1800) "\02\00\00\00 \00\00\00I\00n\00t\00e\00n\00s\00i\00f\00y\00 \00A\00c\00t\00i\00o\00n")
 (data (i32.const 1852) "L")
 (data (i32.const 1864) "\01\00\00\008\00\00\00 \04\00\00`\04\00\00\a0\04\00\00\e0\04\00\00\10\05\00\00@\05\00\00\80\05\00\00\b0\05\00\00\f0\05\00\00 \06\00\00`\06\00\00\90\06\00\00\d0\06\00\00\10\07")
 (data (i32.const 1932) ",")
 (data (i32.const 1944) "\04\00\00\00\10\00\00\00P\07\00\00P\07\00\008\00\00\00\0e")
 (data (i32.const 1980) ",")
 (data (i32.const 1992) "\02\00\00\00\18\00\00\00M\00a\00i\00n\00I\00n\00k\00_\00S\00a\00v\00e")
 (data (i32.const 2028) ",")
 (data (i32.const 2040) "\02\00\00\00\16\00\00\00S\00u\00b\00I\00n\00k\00_\00S\00a\00v\00e")
 (data (i32.const 2076) ",")
 (data (i32.const 2088) "\02\00\00\00\1c\00\00\00I\00n\00k\00R\00e\00c\00o\00v\00e\00r\00y\00_\00U\00p")
 (data (i32.const 2124) ",")
 (data (i32.const 2136) "\02\00\00\00\18\00\00\00H\00u\00m\00a\00n\00M\00o\00v\00e\00_\00U\00p")
 (data (i32.const 2172) ",")
 (data (i32.const 2184) "\02\00\00\00\18\00\00\00S\00q\00u\00i\00d\00M\00o\00v\00e\00_\00U\00p")
 (data (i32.const 2220) "<")
 (data (i32.const 2232) "\02\00\00\00$\00\00\00S\00p\00e\00c\00i\00a\00l\00I\00n\00c\00r\00e\00a\00s\00e\00_\00U\00p")
 (data (i32.const 2284) "L")
 (data (i32.const 2296) "\02\00\00\000\00\00\00R\00e\00s\00p\00a\00w\00n\00S\00p\00e\00c\00i\00a\00l\00G\00a\00u\00g\00e\00_\00S\00a\00v\00e")
 (data (i32.const 2364) ",")
 (data (i32.const 2376) "\02\00\00\00\1c\00\00\00S\00p\00e\00c\00i\00a\00l\00S\00p\00e\00c\00_\00U\00p")
 (data (i32.const 2412) "<")
 (data (i32.const 2424) "\02\00\00\00 \00\00\00R\00e\00s\00p\00a\00w\00n\00T\00i\00m\00e\00_\00S\00a\00v\00e")
 (data (i32.const 2476) ",")
 (data (i32.const 2488) "\02\00\00\00\1a\00\00\00J\00u\00m\00p\00T\00i\00m\00e\00_\00S\00a\00v\00e")
 (data (i32.const 2524) ",")
 (data (i32.const 2536) "\02\00\00\00\14\00\00\00S\00u\00b\00S\00p\00e\00c\00_\00U\00p")
 (data (i32.const 2572) "<")
 (data (i32.const 2584) "\02\00\00\00*\00\00\00O\00p\00I\00n\00k\00E\00f\00f\00e\00c\00t\00_\00R\00e\00d\00u\00c\00t\00i\00o\00n")
 (data (i32.const 2636) "<")
 (data (i32.const 2648) "\02\00\00\00&\00\00\00S\00u\00b\00E\00f\00f\00e\00c\00t\00_\00R\00e\00d\00u\00c\00t\00i\00o\00n")
 (data (i32.const 2700) ",")
 (data (i32.const 2712) "\02\00\00\00\12\00\00\00A\00c\00t\00i\00o\00n\00_\00U\00p")
 (data (i32.const 2748) "L")
 (data (i32.const 2760) "\01\00\00\008\00\00\00\d0\07\00\00\00\08\00\000\08\00\00`\08\00\00\90\08\00\00\c0\08\00\00\00\t\00\00P\t\00\00\80\t\00\00\c0\t\00\00\f0\t\00\00 \n\00\00`\n\00\00\a0\n")
 (data (i32.const 2828) ",")
 (data (i32.const 2840) "\04\00\00\00\10\00\00\00\d0\n\00\00\d0\n\00\008\00\00\00\0e")
 (data (i32.const 2876) "\cc\03")
 (data (i32.const 2888) "\02\00\00\00\ae\03\00\00{\00\r\00\n\00 \00 \00 \00 \00\"\00S\00q\00u\00i\00d\00F\00o\00r\00c\00e\00\"\00:\00 \00\"\00B\000\000\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00Z\00i\00n\00k\00\"\00:\00 \00\"\00B\000\001\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00K\00r\00a\00k\00-\00O\00n\00\"\00:\00 \00\"\00B\000\002\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00R\00o\00c\00k\00e\00n\00b\00e\00r\00g\00\"\00:\00 \00\"\00B\000\003\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00Z\00e\00k\00k\00o\00\"\00:\00 \00\"\00B\000\004\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00F\00o\00r\00g\00e\00\"\00:\00 \00\"\00B\000\005\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00F\00i\00r\00e\00f\00i\00n\00\"\00:\00 \00\"\00B\000\006\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00S\00k\00a\00l\00o\00p\00\"\00:\00 \00\"\00B\000\007\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00S\00p\00l\00a\00s\00h\00 \00M\00o\00b\00\"\00:\00 \00\"\00B\000\008\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00I\00n\00k\00l\00i\00n\00e\00\"\00:\00 \00\"\00B\000\009\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00T\00e\00n\00t\00a\00t\00e\00k\00\"\00:\00 \00\"\00B\001\000\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00T\00a\00k\00o\00r\00o\00k\00a\00\"\00:\00 \00\"\00B\001\001\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00A\00n\00n\00a\00k\00i\00\"\00:\00 \00\"\00B\001\005\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00E\00n\00p\00e\00r\00r\00y\00\"\00:\00 \00\"\00B\001\006\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00T\00o\00n\00i\00 \00K\00e\00n\00s\00a\00\"\00:\00 \00\"\00B\001\007\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\00a\00r\00a\00z\00u\00s\00h\00i\00\"\00:\00 \00\"\00B\001\009\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00E\00m\00b\00e\00r\00z\00\"\00:\00 \00\"\00B\002\000\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00G\00r\00i\00z\00z\00c\00o\00\"\00:\00 \00\"\00B\009\007\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00C\00u\00t\00t\00l\00e\00g\00e\00a\00r\00\"\00:\00 \00\"\00B\009\008\00\"\00,\00\r\00\n\00 \00 \00 \00 \00\"\00a\00m\00i\00i\00b\00o\00\"\00:\00 \00\"\00B\009\009\00\"\00\r\00\n\00}")
 (data (i32.const 3852) "\\\12")
 (data (i32.const 3864) "\02\00\00\00H\12\00\00{\00\r\00\n\00 \00 \00\"\00S\00k\00i\00l\00l\00E\00a\00s\00i\00l\00y\00T\00o\00G\00e\00t\00P\00a\00r\00a\00m\00\"\00:\00 \00[\00\r\00\n\00 \00 \00 \00 \001\00,\00\r\00\n\00 \00 \00 \00 \002\00,\00\r\00\n\00 \00 \00 \00 \001\000\00\r\00\n\00 \00 \00]\00,\00\r\00\n\00 \00 \00\"\00T\00r\00a\00i\00t\00s\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\000\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00M\00a\00i\00n\00I\00n\00k\00_\00S\00a\00v\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00O\00p\00I\00n\00k\00E\00f\00f\00e\00c\00t\00_\00R\00e\00d\00u\00c\00t\00i\00o\00n\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\001\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00R\00e\00s\00p\00a\00w\00n\00T\00i\00m\00e\00_\00S\00a\00v\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00J\00u\00m\00p\00T\00i\00m\00e\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\002\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00E\00f\00f\00e\00c\00t\00_\00R\00e\00d\00u\00c\00t\00i\00o\00n\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00q\00u\00i\00d\00M\00o\00v\00e\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\003\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00q\00u\00i\00d\00M\00o\00v\00e\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00H\00u\00m\00a\00n\00M\00o\00v\00e\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\004\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00p\00e\00c\00i\00a\00l\00I\00n\00c\00r\00e\00a\00s\00e\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00R\00e\00s\00p\00a\00w\00n\00S\00p\00e\00c\00i\00a\00l\00G\00a\00u\00g\00e\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\005\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00I\00n\00k\00_\00S\00a\00v\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00p\00e\00c\00i\00a\00l\00S\00p\00e\00c\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\006\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00I\00n\00k\00R\00e\00c\00o\00v\00e\00r\00y\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00I\00n\00k\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\007\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00R\00e\00s\00p\00a\00w\00n\00S\00p\00e\00c\00i\00a\00l\00G\00a\00u\00g\00e\00_\00S\00a\00v\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00R\00e\00s\00p\00a\00w\00n\00T\00i\00m\00e\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\008\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00H\00u\00m\00a\00n\00M\00o\00v\00e\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00M\00a\00i\00n\00I\00n\00k\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\000\009\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00A\00c\00t\00i\00o\00n\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00E\00f\00f\00e\00c\00t\00_\00R\00e\00d\00u\00c\00t\00i\00o\00n\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\000\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00J\00u\00m\00p\00T\00i\00m\00e\00_\00S\00a\00v\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00I\00n\00k\00R\00e\00c\00o\00v\00e\00r\00y\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\001\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00p\00e\00c\00i\00a\00l\00S\00p\00e\00c\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00p\00e\00c\00i\00a\00l\00I\00n\00c\00r\00e\00a\00s\00e\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\005\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00R\00e\00s\00p\00a\00w\00n\00S\00p\00e\00c\00i\00a\00l\00G\00a\00u\00g\00e\00_\00S\00a\00v\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00I\00n\00k\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\006\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00O\00p\00I\00n\00k\00E\00f\00f\00e\00c\00t\00_\00R\00e\00d\00u\00c\00t\00i\00o\00n\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00S\00p\00e\00c\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\007\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00S\00p\00e\00c\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00M\00a\00i\00n\00I\00n\00k\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\008\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00I\00n\00k\00R\00e\00c\00o\00v\00e\00r\00y\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00R\00e\00s\00p\00a\00w\00n\00S\00p\00e\00c\00i\00a\00l\00G\00a\00u\00g\00e\00_\00S\00a\00v\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\001\009\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00u\00b\00S\00p\00e\00c\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00A\00c\00t\00i\00o\00n\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\002\000\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00S\00p\00e\00c\00i\00a\00l\00I\00n\00c\00r\00e\00a\00s\00e\00_\00U\00p\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00A\00c\00t\00i\00o\00n\00_\00U\00p\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\009\007\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00N\00o\00n\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00N\00o\00n\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\009\008\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00N\00o\00n\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00N\00o\00n\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00,\00\r\00\n\00 \00 \00 \00 \00\"\00B\009\009\00\"\00:\00 \00{\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00N\00o\00n\00e\00\"\00,\00\r\00\n\00 \00 \00 \00 \00 \00 \00\"\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l\00\"\00:\00 \00\"\00N\00o\00n\00e\00\"\00\r\00\n\00 \00 \00 \00 \00}\00\r\00\n\00 \00 \00}\00\r\00\n\00}")
 (data (i32.const 8556) "<")
 (data (i32.const 8568) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 8620) "<")
 (data (i32.const 8632) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 8748) "<")
 (data (i32.const 8760) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 8812) ",")
 (data (i32.const 8824) "\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 8892) "<")
 (data (i32.const 8904) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 8956) "<")
 (data (i32.const 8968) "\02\00\00\00$\00\00\00U\00n\00p\00a\00i\00r\00e\00d\00 \00s\00u\00r\00r\00o\00g\00a\00t\00e")
 (data (i32.const 9020) ",")
 (data (i32.const 9032) "\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data (i32.const 9068) ",")
 (data (i32.const 9080) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 9116) "<")
 (data (i32.const 9128) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data (i32.const 9180) "<")
 (data (i32.const 9192) "\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 9244) ",")
 (data (i32.const 9256) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 9292) "\1c")
 (data (i32.const 9304) "\02")
 (data (i32.const 9324) "|")
 (data (i32.const 9336) "\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)")
 (data (i32.const 9452) "l")
 (data (i32.const 9464) "\02\00\00\00X\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s")
 (data (i32.const 9564) "<")
 (data (i32.const 9576) "\02\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d")
 (data (i32.const 9628) "\1c")
 (data (i32.const 9640) "\02\00\00\00\02\00\00\00{")
 (data (i32.const 9660) "|")
 (data (i32.const 9672) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data (i32.const 9788) "<")
 (data (i32.const 9800) "\02\00\00\00 \00\00\00i\00n\00v\00a\00l\00i\00d\00 \00d\00o\00w\00n\00c\00a\00s\00t")
 (data (i32.const 9852) "l")
 (data (i32.const 9864) "\02\00\00\00R\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00J\00S\00O\00N\00.\00t\00s")
 (data (i32.const 9964) "\1c")
 (data (i32.const 9976) "\02\00\00\00\02\00\00\00}")
 (data (i32.const 9996) "\1c")
 (data (i32.const 10008) "\02\00\00\00\02\00\00\00,")
 (data (i32.const 10028) ",")
 (data (i32.const 10040) "\02\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'")
 (data (i32.const 10076) "\1c")
 (data (i32.const 10088) "\02\00\00\00\02\00\00\00\"")
 (data (i32.const 10108) "L")
 (data (i32.const 10120) "\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g")
 (data (i32.const 10188) "L")
 (data (i32.const 10200) "\02\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r")
 (data (i32.const 10268) "\1c")
 (data (i32.const 10280) "\02\00\00\00\02\00\00\00\\")
 (data (i32.const 10300) "\1c")
 (data (i32.const 10312) "\02\00\00\00\02\00\00\00/")
 (data (i32.const 10332) "\1c")
 (data (i32.const 10344) "\02\00\00\00\02\00\00\00b")
 (data (i32.const 10364) "\1c")
 (data (i32.const 10376) "\02\00\00\00\02\00\00\00\08")
 (data (i32.const 10396) "\1c")
 (data (i32.const 10408) "\02\00\00\00\02\00\00\00n")
 (data (i32.const 10428) "\1c")
 (data (i32.const 10440) "\02\00\00\00\02\00\00\00\n")
 (data (i32.const 10460) "\1c")
 (data (i32.const 10472) "\02\00\00\00\02\00\00\00r")
 (data (i32.const 10492) "\1c")
 (data (i32.const 10504) "\02\00\00\00\02\00\00\00\r")
 (data (i32.const 10524) "\1c")
 (data (i32.const 10536) "\02\00\00\00\02\00\00\00t")
 (data (i32.const 10556) "\1c")
 (data (i32.const 10568) "\02\00\00\00\02\00\00\00\t")
 (data (i32.const 10588) "\1c")
 (data (i32.const 10600) "\02\00\00\00\02\00\00\00u")
 (data (i32.const 10620) "<")
 (data (i32.const 10632) "\02\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t")
 (data (i32.const 10684) "L")
 (data (i32.const 10696) "\02\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 ")
 (data (i32.const 10764) "\1c")
 (data (i32.const 10776) "\02\00\00\00\02\00\00\00:")
 (data (i32.const 10796) ",")
 (data (i32.const 10808) "\02\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'")
 (data (i32.const 10844) "L")
 (data (i32.const 10856) "\02\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t")
 (data (i32.const 10924) ",")
 (data (i32.const 10936) "\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data (i32.const 10972) "\1c")
 (data (i32.const 10984) "\02\00\00\00\02\00\00\00[")
 (data (i32.const 11004) "\1c")
 (data (i32.const 11016) "\02\00\00\00\02\00\00\00]")
 (data (i32.const 11036) "L")
 (data (i32.const 11048) "\02\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y")
 (data (i32.const 11116) "\1c")
 (data (i32.const 11128) "\02\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data (i32.const 11148) ",")
 (data (i32.const 11160) "\02\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'")
 (data (i32.const 11196) "\1c")
 (data (i32.const 11208) "\02\00\00\00\02\00\00\00\'")
 (data (i32.const 11228) "\1c")
 (data (i32.const 11240) "\02\00\00\00\08\00\00\00t\00r\00u\00e")
 (data (i32.const 11260) "\1c")
 (data (i32.const 11272) "\02\00\00\00\04\00\00\00-\000")
 (data (i32.const 11302) "\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 11484) "\1c")
 (data (i32.const 11496) "\02\00\00\00\08\00\00\00n\00u\00l\00l")
 (data (i32.const 11516) "<")
 (data (i32.const 11528) "\02\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N")
 (data (i32.const 11580) "<")
 (data (i32.const 11592) "\02\00\00\00$\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00a\00m\00s\00.\00t\00s")
 (data (i32.const 11644) "<")
 (data (i32.const 11656) "\02\00\00\00*\00\00\00S\00k\00i\00l\00l\00E\00a\00s\00i\00l\00y\00T\00o\00G\00e\00t\00P\00a\00r\00a\00m")
 (data (i32.const 11708) "<")
 (data (i32.const 11720) "\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data (i32.const 11772) ",")
 (data (i32.const 11784) "\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data (i32.const 11820) "\1c")
 (data (i32.const 11832) "\17\00\00\00\08\00\00\00\01")
 (data (i32.const 11852) "\1c")
 (data (i32.const 11864) "\02\00\00\00\0c\00\00\00T\00r\00a\00i\00t\00s")
 (data (i32.const 11884) "<")
 (data (i32.const 11896) "\02\00\00\00 \00\00\00U\00n\00u\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l")
 (data (i32.const 11948) ",")
 (data (i32.const 11960) "\02\00\00\00\1c\00\00\00U\00s\00u\00a\00l\00G\00e\00a\00r\00S\00k\00i\00l\00l")
 (data (i32.const 11996) "\8c")
 (data (i32.const 12008) "\02\00\00\00v\00\00\00W\00A\00S\00M\00 \00E\00R\00R\00O\00R\00:\00 \00E\00I\00G\00H\00T\00A\00B\00I\00L\00I\00T\00Y\00C\00O\00M\00B\00O\00 \00H\00A\00S\00 \00M\00O\00R\00E\00 \00T\00H\00A\00N\00 \008\00 \00A\00B\00I\00L\00I\00T\00I\00E\00S\00:\00 \00 \00 ")
 (data (i32.const 12140) "|")
 (data (i32.const 12152) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data (i32.const 12268) "<")
 (data (i32.const 12280) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data (i32.const 12332) "\1c")
 (data (i32.const 12344) "\02\00\00\00\02\00\00\000")
 (data (i32.const
 (data (i32.const 12764) "\1c\04")
 (data (i32.const 12776) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data (i32.const 13820) "\\")
 (data (i32.const 13832) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 13916) "\1c")
 (data (i32.const 13928) "!\00\00\00\08\00\00\00\02")
 (data (i32.const 13948) "L")
 (data (i32.const 13960) "\01\00\00\00<\00\00\00\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00\r")
 (data (i32.const 14028) "L")
 (data (i32.const 14040) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00C\00u\00s\00t\00o\00m\00_\00O\00b\00j\00e\00c\00t\00s\00_\002\00.\00t\00s")
 (data (i32.const 14108) "\1c")
 (data (i32.const 14120) ".\00\00\00\08\00\00\00\03")
 (data (i32.const 14140) "\1c")
 (data (i32.const 14152) "0\00\00\00\08\00\00\00\04")
 (data (i32.const 14172) "\1c")
 (data (i32.const 14184) "\01")
 (data (i32.const 14204) "\1c")
 (data (i32.const 14216) "\01")
 (data (i32.const 14236) "L")
 (data (i32.const 14248) "\01\00\00\00<\00\00\00\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00\r")
 (data (i32.const 14316) "\1c")
 (data (i32.const 14328) "\01")
 (data (i32.const 14348) "\1c")
 (data (i32.const 14360) "\01")
 (data (i32.const 14380) "\1c")
 (data (i32.const 14392) "\01")
 (data (i32.const 14412) "\1c")
 (data (i32.const 14424) "\01")
 (data (i32.const 14444) "\1c")
 (data (i32.const 14456) "\01")
 (data (i32.const 14476) "\1c")
 (data (i32.const 14488) ">\00\00\00\08\00\00\00\05")
 (data (i32.const 14508) "\1c")
 (data (i32.const 14520) "\01")
 (data (i32.const 14540) "\1c")
 (data (i32.const 14552) "\01")
 (data (i32.const 14572) "\1c")
 (data (i32.const 14584) "@\00\00\00\08\00\00\00\06")
 (data (i32.const 14604) "\1c")
 (data (i32.const 14616) "A\00\00\00\08\00\00\00\07")
 (data (i32.const 14636) "\1c")
 (data (i32.const 14648) "\01")
 (data (i32.const 14668) "\1c")
 (data (i32.const 14680) "\01")
 (data (i32.const 14700) "\1c")
 (data (i32.const 14712) "B\00\00\00\08\00\00\00\08")
 (data (i32.const 14732) "\1c")
 (data (i32.const 14744) "C\00\00\00\08\00\00\00\t")
 (data (i32.const 14764) "\1c")
 (data (i32.const 14776) "D\00\00\00\08\00\00\00\n")
 (data (i32.const 14796) "\1c")
 (data (i32.const 14808) "\01")
 (data (i32.const 14828) "\1c")
 (data (i32.const 14840) "F\00\00\00\08\00\00\00\0b")
 (data (i32.const 14860) "\1c")
 (data (i32.const 14872) "\01")
 (data (i32.const 14892) "\1c")
 (data (i32.const 14904) ">\00\00\00\08\00\00\00\0c")
 (data (i32.const 14924) "\1c")
 (data (i32.const 14936) "H\00\00\00\08\00\00\00\r")
 (data (i32.const 14956) ",")
 (data (i32.const 14968) "\02\00\00\00\0e\00\00\00P\00R\00O\00B\00L\00E\00M")
 (data (i32.const 15004) "\1c")
 (data (i32.const 15016) "H\00\00\00\08\00\00\00\0e")
 (data (i32.const 15036) "\1c")
 (data (i32.const 15048) "\01")
 (data (i32.const 15068) "<")
 (data (i32.const 15080) "\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 15132) "<")
 (data (i32.const 15144) "\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 15200) "I\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02A\00\00\10A\82\00 \00\00\00\10A\82\00\00\00\00\00A\00\00\00\00\00\00\00 \00\00\00\02A")
 (data (i32.const 15272) " \00\00\00 \00\00\00 \00\00\00 \00\00\00 \00\00\00\02\t\00\00\00\00\00\00\01\01\00\00 \00\00\00 \00\00\00 \00\00\00\02A\00\00 \00\00\00\02\01\00\00 \00\00\00 \00\00\00\00\00\00\00\02A\00\00 \00\00\00\00\00\00\00\02A\00\00\02A\00\00\02A\00\00\00\00\00\00\02\02\00\00\02A\00\00\02A\00\00\08\02")
 (data (i32.const 15392) "\10A\04\00\00\00\00\00\10A\02\00\10A\02\00\08\01\00\00 \00\00\00\02A\00\00\02A")
 (data (i32.const 15432) "\02A\00\00\02A\00\00\00\00\00\00\02A\00\00\02A\00\00\00\00\00\00\02A")
 (data (i32.const 15480) "\10A\04\00\00\00\00\00\10A\04")
 (table $0 15 15 funcref)
 (elem $0 (i32.const 1) $start:assembly/params~anonymous|0 $assembly/index/AbilityComboToValue~anonymous|0 $assembly/index/AbilityComboToValue~anonymous|0 $assembly/process_single_gear/purify_single_gear_index~anonymous|0 $assembly/process_all_gear_at_once/mapped_gear_solution_to_ticketsetcombo_array~anonymous|0 $assembly/process_all_gear_at_once/all_gear_is_already_purified~anonymous|0~anonymous|0 $assembly/process_all_gear_at_once/all_gear_is_already_purified~anonymous|0 $assembly/process_all_gear_at_once/apply_ticket_to_all_ticketsetcombos~anonymous|0 $assembly/process_all_gear_at_once/apply_ticket_to_all_gear~anonymous|0 $assembly/process_all_gear_at_once/prepend_ticket_to_all_combos~anonymous|0 $assembly/all_gear_output_table/list_all_gear_abilities_for_each_ticket_combo~anonymous|0 $assembly/process_all_gear_at_once/mapped_gear_solution_to_ticketsetcombo_array~anonymous|0 $assembly/all_gear_output_table/ticketComboPurifiesTicketSetCombo~anonymous|1 $assembly/all_gear_output_table/ticketComboPurifiesTicketSetCombo~anonymous|1)
 (export "ValueToAbilityCombo" (func $assembly/index/ValueToAbilityCombo))
 (export "ValueToTicketSet" (func $assembly/index/ValueToTicketSet))
 (export "add" (func $assembly/index/add))
 (export "advance_seed" (func $assembly/index/advance_seed))
 (export "get_ability" (func $assembly/index/get_ability))
 (export "weighted_ability" (func $assembly/index/weighted_ability))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "__setArgumentsLength" (func $~setArgumentsLength))
 (export "AbilityComboToValue" (func $export:assembly/index/AbilityComboToValue))
 (export "purify_single_gear" (func $export:assembly/process_single_gear/purify_single_gear@varargs))
 (export "purify_all_gear" (func $export:assembly/process_all_gear_at_once/purify_all_gear@varargs))
 (start $~start)
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  i32.const 8768
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 9088
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 10944
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 9680
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11728
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 8576
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 15088
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 15152
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 8976
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 12784
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 13840
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/params/json_brand_names
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/params/json_brand_data
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/params/SkillEasilyToGetParam
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/params/Traits
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/params/const_max_brand_num
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/params/const_max_brand_num_drink
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/params/const_get_ability_weight
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/process_all_gear_at_once/global_ticket
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/process_all_gear_at_once/global_ticket_prepend
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 11248
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11136
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11504
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.handler
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-json/assembly/JSON/NULL
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 1952
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2848
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2896
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3872
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 8640
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.tee $1
  i32.eqz
  if
   local.get $0
   i32.load $0 offset=8
   i32.eqz
   local.get $0
   i32.const 48264
   i32.lt_u
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 8640
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 8640
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load $0 offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 8640
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 15200
   i32.load $0
   i32.gt_u
   if
    i32.const 8768
    i32.const 8832
    i32.const 21
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 2
   i32.shl
   i32.const 15204
   i32.add
   i32.load $0
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $1
  i32.load $0 offset=8
  local.set $2
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $1
  i32.or
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $0
  local.get $2
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 8912
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 8912
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 8912
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  local.set $5
  local.get $1
  i32.load $0 offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store $0 offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store $0 offset=4
  end
  local.get $1
  local.get $0
  local.get $3
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $0
   local.get $3
   i32.const 4
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $5
   i32.store $0 offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load $0 offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load $0
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store $0
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 8912
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 8912
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load $0
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load $0
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load $0
   local.tee $1
   i32.load $0
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 8912
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store $0
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 8912
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 8912
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store $0
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 8912
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store $0 offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0 offset=96
  local.get $0
  local.get $0
  i32.load $0
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store $0
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 8912
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load $0 offset=1568
  local.tee $4
  if
   local.get $4
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 8912
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $4
    i32.load $0
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 8912
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $3
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  local.tee $2
  i32.const 2
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size $0
  local.tee $1
  i32.const 0
  i32.le_s
  if (result i32)
   i32.const 1
   local.get $1
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 48272
  i32.const 0
  i32.store $0
  i32.const 49840
  i32.const 0
  i32.store $0
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 48272
    i32.add
    i32.const 0
    i32.store $0 offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 48272
      i32.add
      i32.const 0
      i32.store $0 offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 48272
  i32.const 49844
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 48272
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load $0 offset=4
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store $0 offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load $0 offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 48264
      i32.lt_u
      if
       local.get $0
       i32.load $0
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load $0 offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load $0 offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $0
        i32.load $0 offset=4
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store $0 offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load $0 offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 8640
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 48264
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load $0
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     i32.const 48264
     i32.ge_u
     if
      global.get $~lib/rt/tlsf/ROOT
      i32.eqz
      if
       call $~lib/rt/tlsf/initialize
      end
      global.get $~lib/rt/tlsf/ROOT
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.set $2
      local.get $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if (result i32)
       i32.const 1
      else
       local.get $2
       i32.load $0
       i32.const 1
       i32.and
      end
      if
       i32.const 0
       i32.const 8912
       i32.const 559
       i32.const 3
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      local.get $2
      i32.load $0
      i32.const 1
      i32.or
      i32.store $0
      local.get $1
      local.get $2
      call $~lib/rt/tlsf/insertBlock
     end
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.store $0 offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 8912
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
  else
   local.get $0
   i32.load $0
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 8912
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 8576
   i32.const 8640
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    local.get $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.set $4
  local.get $0
  i32.const 16
  i32.add
  local.tee $2
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 8576
   i32.const 8912
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 12
  local.get $2
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $2
  i32.const 12
  i32.le_u
  select
  local.tee $5
  call $~lib/rt/tlsf/searchBlock
  local.tee $2
  i32.eqz
  if
   memory.size $0
   local.tee $2
   i32.const 4
   local.get $4
   i32.load $0 offset=1568
   local.get $2
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   local.get $5
   i32.const 1
   i32.const 27
   local.get $5
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $5
   local.get $5
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $3
   local.get $2
   local.get $3
   i32.gt_s
   select
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow $0
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $4
   local.get $2
   i32.const 16
   i32.shl
   memory.size $0
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/searchBlock
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 8912
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $5
  local.get $2
  i32.load $0
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 8912
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $2
  call $~lib/rt/tlsf/removeBlock
  local.get $2
  i32.load $0
  local.set $3
  local.get $5
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 8912
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $5
  i32.sub
  local.tee $6
  i32.const 16
  i32.ge_u
  if
   local.get $2
   local.get $5
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store $0
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.add
   local.tee $3
   local.get $6
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store $0
   local.get $4
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $2
   local.get $3
   i32.const -2
   i32.and
   i32.store $0
   local.get $2
   i32.const 4
   i32.add
   local.get $2
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   local.get $3
   i32.load $0
   i32.const -3
   i32.and
   i32.store $0
  end
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $2
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load $0 offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load $0
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill $0
  local.get $1
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  local.tee $3
  i32.load $0
  i32.const -4
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $3
   local.get $1
   i32.store $0 offset=16
   local.get $0
   return
  end
  local.get $1
  local.get $3
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $0
  local.get $1
  local.get $3
  i32.load $0 offset=16
  local.tee $0
  local.get $0
  local.get $1
  i32.gt_u
  select
  memory.copy $0 $0
  local.get $2
 )
 (func $~lib/string/String.fromCharCode@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  i32.const 2
  local.get $1
  i32.const 0
  i32.gt_s
  local.tee $3
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  local.get $2
  local.get $0
  i32.store16 $0
  local.get $3
  if
   local.get $2
   local.get $1
   i32.store16 $0 offset=2
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/math/ipow32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5
  local.set $1
  i32.const 1
  local.set $2
  local.get $0
  i32.const 0
  i32.le_s
  if
   local.get $0
   i32.eqz
   return
  else
   local.get $0
   i32.const 1
   i32.eq
   if
    i32.const 5
    return
   else
    local.get $0
    i32.const 2
    i32.eq
    if
     i32.const 25
     return
    else
     local.get $0
     i32.const 32
     i32.lt_s
     if
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            i32.const 31
            local.get $0
            i32.clz
            i32.sub
            br_table $case4|0 $case3|0 $case2|0 $case1|0 $case0|0 $break|0
           end
           i32.const 5
           i32.const 1
           local.get $0
           i32.const 1
           i32.and
           select
           local.set $2
           local.get $0
           i32.const 1
           i32.shr_u
           local.set $0
           i32.const 25
           local.set $1
          end
          local.get $1
          local.get $2
          i32.mul
          local.get $2
          local.get $0
          i32.const 1
          i32.and
          select
          local.set $2
          local.get $0
          i32.const 1
          i32.shr_u
          local.set $0
          local.get $1
          local.get $1
          i32.mul
          local.set $1
         end
         local.get $1
         local.get $2
         i32.mul
         local.get $2
         local.get $0
         i32.const 1
         i32.and
         select
         local.set $2
         local.get $0
         i32.const 1
         i32.shr_u
         local.set $0
         local.get $1
         local.get $1
         i32.mul
         local.set $1
        end
        local.get $1
        local.get $2
        i32.mul
        local.get $2
        local.get $0
        i32.const 1
        i32.and
        select
        local.set $2
        local.get $0
        i32.const 1
        i32.shr_u
        local.set $0
        local.get $1
        local.get $1
        i32.mul
        local.set $1
       end
       local.get $1
       local.get $2
       i32.mul
       local.get $2
       local.get $0
       i32.const 1
       i32.and
       select
       local.set $2
      end
      local.get $2
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $0
   if
    local.get $1
    local.get $2
    i32.mul
    local.get $2
    local.get $0
    i32.const 1
    i32.and
    select
    local.set $2
    local.get $0
    i32.const 1
    i32.shr_u
    local.set $0
    local.get $1
    local.get $1
    i32.mul
    local.set $1
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $~lib/math/NativeMath.scalbn (param $0 f64) (param $1 i32) (result f64)
  local.get $1
  i32.const 1023
  i32.gt_s
  if (result f64)
   local.get $0
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $0
   local.get $1
   i32.const 1023
   i32.sub
   local.tee $1
   i32.const 1023
   i32.gt_s
   if (result f64)
    i32.const 1023
    local.get $1
    i32.const 1023
    i32.sub
    local.tee $1
    local.get $1
    i32.const 1023
    i32.ge_s
    select
    local.set $1
    local.get $0
    f64.const 8988465674311579538646525e283
    f64.mul
   else
    local.get $0
   end
  else
   local.get $1
   i32.const -1022
   i32.lt_s
   if (result f64)
    local.get $0
    f64.const 2.004168360008973e-292
    f64.mul
    local.set $0
    local.get $1
    i32.const 969
    i32.add
    local.tee $1
    i32.const -1022
    i32.lt_s
    if (result f64)
     i32.const -1022
     local.get $1
     i32.const 969
     i32.add
     local.tee $1
     local.get $1
     i32.const -1022
     i32.le_s
     select
     local.set $1
     local.get $0
     f64.const 2.004168360008973e-292
     f64.mul
    else
     local.get $0
    end
   else
    local.get $0
   end
  end
  local.get $1
  i64.extend_i32_s
  i64.const 1023
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
 )
 (func $assembly/index/ValueToAbilityCombo (param $0 i64) (result i32)
  local.get $0
  call $assembly/Custom_Objects_2/SixteenAbilityCombo.toAbilityCombo
 )
 (func $assembly/index/AbilityComboToValue~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $assembly/Custom_Objects_2/_Ability#constructor
 )
 (func $assembly/index/add (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $assembly/index/advance_seed (param $0 i32) (result i32)
  local.get $0
  local.get $0
  i32.const 13
  i32.shl
  i32.xor
  local.tee $0
  i32.const 17
  i32.shr_u
  local.get $0
  i32.xor
  local.tee $0
  i32.const 5
  i32.shl
  local.get $0
  i32.xor
 )
 (func $assembly/index/weighted_ability (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const -1
  local.set $2
  loop $while-continue|0
   local.get $0
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $1
    local.get $2
    i32.const 1
    i32.add
    local.tee $2
    call $assembly/params/get_ability_weight
    i32.sub
    local.set $0
    br $while-continue|0
   end
  end
  local.get $2
 )
 (func $assembly/process_single_gear/purify_single_gear_index~anonymous|0 (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  loop $for-loop|0
   local.get $3
   i32.const 16
   i32.lt_s
   if
    local.get $4
    i32.const 1
    i32.add
    local.get $4
    local.get $0
    i64.const 15
    local.get $3
    i32.const 2
    i32.shl
    i64.extend_i32_s
    local.tee $5
    i64.shl
    i64.and
    local.get $5
    i64.shr_u
    i64.const 15
    i64.ne
    select
    local.set $4
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $4
  i32.eqz
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.const 3
   i32.eq
   if
    i32.const 15088
    i32.const 8640
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/pinSpace
   local.tee $3
   i32.load $0 offset=8
   local.set $2
   local.get $1
   local.get $3
   i32.const 3
   i32.or
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.const 3
  i32.ne
  if
   i32.const 15152
   i32.const 8640
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/fromSpace
   local.tee $0
   i32.load $0 offset=8
   local.set $2
   local.get $1
   local.get $0
   global.get $~lib/rt/itcms/white
   i32.or
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
 )
 (func $~lib/rt/itcms/__collect
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>~visit (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  local.set $1
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.gt_u
   if
    local.get $1
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $1
     i32.load $0
     local.tee $3
     if
      local.get $3
      call $byn-split-outlined-A$~lib/rt/itcms/__visit
     end
     local.get $1
     i32.load $0 offset=4
     local.tee $3
     if
      local.get $3
      call $byn-split-outlined-A$~lib/rt/itcms/__visit
     end
    end
    local.get $1
    i32.const 12
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  if
   local.get $2
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<u64>~visit (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>~visit (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  local.set $1
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.gt_u
   if
    local.get $1
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $1
     i32.load $0 offset=4
     local.tee $3
     if
      local.get $3
      call $byn-split-outlined-A$~lib/rt/itcms/__visit
     end
    end
    local.get $1
    i32.const 12
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  if
   local.get $2
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner10
   block $folding-inner9
    block $folding-inner8
     block $folding-inner7
      block $folding-inner6
       block $folding-inner5
        block $folding-inner4
         block $folding-inner3
          block $folding-inner2
           block $folding-inner0
            block $invalid
             block $assembly/Custom_Objects_2/_TicketSet
              block $~lib/set/Set<u32>
               block $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>
                block $~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>
                 block $~lib/set/Set<u64>
                  block $assembly/Custom_Objects_2/TicketSet
                   block $assembly/Custom_Objects_2/SixteenAbilityCombo
                    block $assembly/Custom_Objects_2/_SixteenAbilityCombo
                     block $assembly/Custom_Objects_2/_Ability
                      block $assembly/Custom_Objects_2/Ability
                       block $assembly/Custom_Objects_2/_Ticket
                        block $assembly/Custom_Objects_2/Ticket
                         block $~lib/assemblyscript-json/assembly/JSON/Null
                          block $~lib/assemblyscript-json/assembly/JSON/Integer
                           block $~lib/assemblyscript-json/assembly/JSON/Num
                            block $~lib/assemblyscript-json/assembly/JSON/Float
                             block $~lib/assemblyscript-json/assembly/JSON/Bool
                              block $~lib/assemblyscript-json/assembly/decoder/DecoderState
                               block $~lib/assemblyscript-json/assembly/decoder/JSONHandler
                                block $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>
                                 block $~lib/assemblyscript-json/assembly/JSON/Value
                                  block $~lib/map/Map<~lib/string/String,~lib/string/String>
                                   block $~lib/string/String
                                    block $~lib/arraybuffer/ArrayBuffer
                                     block $~lib/object/Object
                                      local.get $0
                                      i32.const 8
                                      i32.sub
                                      i32.load $0
                                      br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner7 $folding-inner0 $~lib/map/Map<~lib/string/String,~lib/string/String> $~lib/assemblyscript-json/assembly/JSON/Value $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value> $folding-inner7 $folding-inner7 $folding-inner7 $~lib/assemblyscript-json/assembly/decoder/JSONHandler $folding-inner0 $folding-inner2 $~lib/assemblyscript-json/assembly/decoder/DecoderState $folding-inner7 $folding-inner7 $~lib/assemblyscript-json/assembly/JSON/Bool $~lib/assemblyscript-json/assembly/JSON/Float $~lib/assemblyscript-json/assembly/JSON/Num $~lib/assemblyscript-json/assembly/JSON/Integer $~lib/assemblyscript-json/assembly/JSON/Null $folding-inner3 $folding-inner4 $folding-inner7 $assembly/Custom_Objects_2/Ticket $assembly/Custom_Objects_2/_Ticket $assembly/Custom_Objects_2/Ability $folding-inner0 $assembly/Custom_Objects_2/_Ability $folding-inner3 $assembly/Custom_Objects_2/_SixteenAbilityCombo $assembly/Custom_Objects_2/SixteenAbilityCombo $folding-inner4 $folding-inner0 $assembly/Custom_Objects_2/TicketSet $folding-inner8 $folding-inner0 $folding-inner0 $folding-inner0 $folding-inner2 $folding-inner3 $folding-inner0 $folding-inner0 $~lib/set/Set<u64> $folding-inner8 $folding-inner4 $folding-inner5 $folding-inner4 $~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet> $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>> $~lib/set/Set<u32> $assembly/Custom_Objects_2/_TicketSet $folding-inner0 $folding-inner0 $folding-inner9 $folding-inner2 $folding-inner0 $folding-inner0 $folding-inner2 $folding-inner0 $folding-inner0 $folding-inner4 $folding-inner0 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner5 $folding-inner4 $folding-inner5 $folding-inner4 $invalid
                                     end
                                     return
                                    end
                                    return
                                   end
                                   return
                                  end
                                  local.get $0
                                  call $~lib/map/Map<~lib/string/String,~lib/string/String>~visit
                                  return
                                 end
                                 return
                                end
                                local.get $0
                                call $~lib/map/Map<~lib/string/String,~lib/string/String>~visit
                                return
                               end
                               return
                              end
                              local.get $0
                              i32.load $0
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=8
                              local.tee $0
                              if
                               local.get $0
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              return
                             end
                             return
                            end
                            return
                           end
                           return
                          end
                          return
                         end
                         return
                        end
                        return
                       end
                       return
                      end
                      return
                     end
                     return
                    end
                    return
                   end
                   return
                  end
                  return
                 end
                 local.get $0
                 call $~lib/set/Set<u64>~visit
                 return
                end
                local.get $0
                call $~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>~visit
                return
               end
               local.get $0
               call $~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>~visit
               return
              end
              local.get $0
              call $~lib/set/Set<u64>~visit
              return
             end
             return
            end
            unreachable
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 4
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 15496
           i32.lt_s
           br_if $folding-inner6
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           i32.const 0
           i32.store $0
           local.get $2
           local.get $0
           i32.store $0
           local.get $0
           i32.load $0 offset=4
           local.set $1
           local.get $2
           local.get $0
           i32.store $0
           local.get $1
           local.get $0
           i32.load $0 offset=12
           i32.const 2
           i32.shl
           i32.add
           local.set $2
           loop $while-continue|0
            local.get $1
            local.get $2
            i32.lt_u
            if
             local.get $1
             i32.load $0
             local.tee $3
             if
              local.get $3
              call $byn-split-outlined-A$~lib/rt/itcms/__visit
             end
             local.get $1
             i32.const 4
             i32.add
             local.set $1
             br $while-continue|0
            end
           end
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           br $folding-inner10
          end
          local.get $0
          i32.load $0
          local.tee $1
          if
           local.get $1
           call $byn-split-outlined-A$~lib/rt/itcms/__visit
          end
          br $folding-inner9
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 15496
         i32.lt_s
         br_if $folding-inner6
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.store $0
         local.get $1
         local.get $0
         i32.store $0
         br $folding-inner10
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 15496
        i32.lt_s
        br_if $folding-inner6
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i32.const 0
        i32.store $0
        local.get $1
        local.get $0
        i32.store $0
        local.get $0
        i32.load $0 offset=4
        local.tee $0
        if
         local.get $0
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        return
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 15496
       i32.lt_s
       br_if $folding-inner6
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i32.const 0
       i32.store $0
       local.get $1
       local.get $0
       local.tee $1
       i32.store $0
       local.get $0
       i32.load $0
       local.tee $0
       if
        local.get $0
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $1
       i32.store $0
       local.get $1
       i32.load $0 offset=8
       local.tee $3
       local.set $0
       local.get $2
       local.get $1
       i32.store $0
       local.get $0
       local.get $1
       i32.load $0 offset=16
       i32.const 4
       i32.shl
       i32.add
       local.set $1
       loop $while-continue|03
        local.get $0
        local.get $1
        i32.lt_u
        if
         local.get $0
         i32.load $0 offset=12
         i32.const 1
         i32.and
         i32.eqz
         if
          local.get $0
          i32.load $0 offset=8
          local.tee $2
          if
           local.get $2
           call $byn-split-outlined-A$~lib/rt/itcms/__visit
          end
         end
         local.get $0
         i32.const 16
         i32.add
         local.set $0
         br $while-continue|03
        end
       end
       local.get $3
       if
        local.get $3
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       return
      end
      i32.const 48288
      i32.const 48336
      i32.const 1
      i32.const 1
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.load $0
     local.tee $0
     if
      local.get $0
      call $byn-split-outlined-A$~lib/rt/itcms/__visit
     end
     return
    end
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    if
     local.get $0
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
    return
   end
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load $0
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~setArgumentsLength (param $0 i32)
  local.get $0
  global.set $~argumentsLength
 )
 (func $~start
  call $start:assembly/params
  i32.const 15
  call $assembly/Custom_Objects_2/_Ticket#constructor
  global.set $assembly/process_all_gear_at_once/global_ticket
  i32.const 15
  call $assembly/Custom_Objects_2/_Ticket#constructor
  global.set $assembly/process_all_gear_at_once/global_ticket_prepend
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 9088
   i32.const 9136
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $0
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $3
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/util/index/Buffer.fromString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   i32.const 2
   global.set $~argumentsLength
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $2of2 $2of2 $2of2 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   local.tee $2
   i32.store $0
   local.get $0
   local.tee $1
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.add
   local.set $4
   i32.const 0
   local.set $0
   loop $while-continue|0
    local.get $1
    local.get $4
    i32.lt_u
    if
     local.get $1
     i32.load16_u $0
     local.tee $5
     i32.const 128
     i32.lt_u
     if (result i32)
      local.get $0
      i32.const 1
      i32.add
     else
      local.get $5
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 2
       i32.add
      else
       local.get $5
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       local.get $1
       i32.const 2
       i32.add
       local.get $4
       i32.lt_u
       i32.and
       if
        local.get $1
        i32.load16_u $0 offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $0
         i32.const 4
         i32.add
         local.set $0
         local.get $1
         i32.const 4
         i32.add
         local.set $1
         br $while-continue|0
        end
       end
       local.get $0
       i32.const 3
       i32.add
      end
     end
     local.set $0
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   local.get $2
   i32.add
   local.set $5
   local.get $1
   local.set $0
   loop $while-continue|00
    local.get $2
    local.get $5
    i32.lt_u
    if
     local.get $2
     i32.load16_u $0
     local.tee $6
     i32.const 128
     i32.lt_u
     if (result i32)
      local.get $0
      local.get $6
      i32.store8 $0
      local.get $0
      i32.const 1
      i32.add
     else
      local.get $6
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $0
       local.get $6
       i32.const 6
       i32.shr_u
       i32.const 192
       i32.or
       local.get $6
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.const 8
       i32.shl
       i32.or
       i32.store16 $0
       local.get $0
       i32.const 2
       i32.add
      else
       local.get $6
       i32.const 56320
       i32.lt_u
       local.get $2
       i32.const 2
       i32.add
       local.get $5
       i32.lt_u
       i32.and
       local.get $6
       i32.const 63488
       i32.and
       i32.const 55296
       i32.eq
       i32.and
       if
        local.get $2
        i32.load16_u $0 offset=2
        local.tee $4
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $0
         local.get $6
         i32.const 1023
         i32.and
         i32.const 10
         i32.shl
         i32.const 65536
         i32.add
         local.get $4
         i32.const 1023
         i32.and
         i32.or
         local.tee $4
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         i32.const 24
         i32.shl
         local.get $4
         i32.const 6
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         i32.const 16
         i32.shl
         i32.or
         local.get $4
         i32.const 12
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         i32.const 8
         i32.shl
         i32.or
         local.get $4
         i32.const 18
         i32.shr_u
         i32.const 240
         i32.or
         i32.or
         i32.store $0
         local.get $0
         i32.const 4
         i32.add
         local.set $0
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         br $while-continue|00
        end
       end
       local.get $0
       local.get $6
       i32.const 12
       i32.shr_u
       i32.const 224
       i32.or
       local.get $6
       i32.const 6
       i32.shr_u
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.const 8
       i32.shl
       i32.or
       i32.store16 $0
       local.get $0
       local.get $6
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.store8 $0 offset=2
       local.get $0
       i32.const 3
       i32.add
      end
     end
     local.set $0
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 12
    i32.const 9
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.const 0
    i32.const 0
    call $~lib/arraybuffer/ArrayBufferView#constructor
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   local.set $1
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of23
    block $1of24
     block $outOfRange6
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $1of24 $1of24 $2of23 $outOfRange6
     end
     unreachable
    end
    i32.const -1
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.store $0
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   local.set $0
   local.get $1
   i32.const 0
   i32.lt_s
   if
    local.get $1
    i32.const -1
    i32.ne
    if
     i32.const 9088
     i32.const 9200
     i32.const 1869
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   else
    local.get $0
    local.get $1
    local.tee $0
    i32.lt_s
    if
     i32.const 9088
     i32.const 9200
     i32.const 1874
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 9088
   i32.const 9264
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 9344
   i32.const 9472
   i32.const 127
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 8768
   i32.const 9200
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  i32.load8_u $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  local.get $1
  i32.le_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=4
  call $~lib/typedarray/Uint8Array#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  local.get $1
  i32.le_s
  if
   i32.const 9584
   i32.const 9472
   i32.const 156
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.const 1
  i32.add
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/typedarray/Uint8Array#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.tee $1
   i32.const 10
   i32.eq
   local.get $1
   i32.const 9
   i32.eq
   i32.or
   local.get $1
   i32.const 13
   i32.eq
   i32.or
   local.get $1
   i32.const 32
   i32.eq
   i32.or
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 9088
    i32.const 9264
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   local.get $2
   i32.shl
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $3
   if
    i32.const 1073741820
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   local.get $0
   i32.load $0
   local.tee $5
   local.get $1
   call $~lib/rt/itcms/__renew
   local.tee $2
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $0
  local.get $3
  i32.store $0 offset=12
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 8768
   i32.const 9264
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 9680
   i32.const 9264
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   local.get $1
   local.get $0
   i32.store $0
   i32.const 0
   local.get $0
   i32.eqz
   br_if $~lib/util/hash/hashStr|inlined.0
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   local.tee $3
   i32.const 16
   i32.ge_u
   if (result i32)
    i32.const 606290984
    local.set $2
    i32.const -2048144777
    local.set $4
    i32.const 1640531535
    local.set $5
    local.get $1
    local.get $3
    i32.add
    i32.const 16
    i32.sub
    local.set $7
    loop $while-continue|0
     local.get $1
     local.get $7
     i32.le_u
     if
      local.get $2
      local.get $1
      i32.load $0
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $2
      local.get $4
      local.get $1
      i32.load $0 offset=4
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $4
      local.get $6
      local.get $1
      i32.load $0 offset=8
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $5
      local.get $1
      i32.load $0 offset=12
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $3
    local.get $2
    i32.const 1
    i32.rotl
    local.get $4
    i32.const 7
    i32.rotl
    i32.add
    local.get $6
    i32.const 12
    i32.rotl
    i32.add
    local.get $5
    i32.const 18
    i32.rotl
    i32.add
    i32.add
   else
    local.get $3
    i32.const 374761393
    i32.add
   end
   local.set $2
   local.get $0
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.le_u
    if
     local.get $2
     local.get $1
     i32.load $0
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   local.get $0
   local.get $3
   i32.add
   local.set $0
   loop $while-continue|2
    local.get $0
    local.get $1
    i32.gt_u
    if
     local.get $2
     local.get $1
     i32.load8_u $0
     i32.const 374761393
     i32.mul
     i32.add
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   local.get $0
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.get $1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $2
   local.get $1
   i32.store $0
   local.get $3
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.tee $2
   i32.const 7
   i32.and
   local.get $1
   i32.const 7
   i32.and
   i32.or
   i32.eqz
   local.get $3
   local.tee $0
   i32.const 4
   i32.ge_u
   i32.and
   if
    loop $do-loop|0
     local.get $2
     i64.load $0
     local.get $1
     i64.load $0
     i64.eq
     if
      local.get $2
      i32.const 8
      i32.add
      local.set $2
      local.get $1
      i32.const 8
      i32.add
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.tee $0
      i32.const 4
      i32.ge_u
      br_if $do-loop|0
     end
    end
   end
   block $__inlined_func$~lib/util/string/compareImpl
    loop $while-continue|1
     local.get $0
     local.tee $3
     i32.const 1
     i32.sub
     local.set $0
     local.get $3
     if
      local.get $2
      i32.load16_u $0
      local.tee $5
      local.get $1
      i32.load16_u $0
      local.tee $4
      i32.sub
      local.set $3
      local.get $4
      local.get $5
      i32.ne
      br_if $__inlined_func$~lib/util/string/compareImpl
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $1
      i32.const 2
      i32.add
      local.set $1
      br $while-continue|1
     end
    end
    i32.const 0
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   i32.eqz
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load $0 offset=8
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $2
     i32.load $0
     local.tee $4
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $4
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   local.get $7
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
   local.tee $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=16
    local.set $4
    local.get $3
    local.get $0
    i32.store $0
    local.get $4
    local.get $0
    i32.load $0 offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=20
     local.set $4
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $4
     local.get $0
     i32.load $0 offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $3
     local.get $6
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $11
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $8
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.load $0 offset=8
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $0
     i32.load $0 offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $9
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $9
      i32.ne
      if
       local.get $5
       i32.load $0 offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $13
        local.get $5
        i32.load $0
        local.tee $12
        i32.store $0 offset=12
        local.get $13
        local.get $12
        i32.store $0 offset=16
        local.get $3
        local.get $12
        i32.store $0
        local.get $13
        local.get $5
        i32.load $0 offset=4
        local.tee $10
        i32.store $0 offset=16
        local.get $3
        local.get $10
        i32.store $0 offset=4
        local.get $13
        local.get $12
        i32.store $0 offset=8
        local.get $3
        local.get $11
        local.get $12
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $6
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $10
        i32.load $0
        i32.store $0 offset=8
        local.get $10
        local.get $3
        i32.store $0
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $5
       i32.const 12
       i32.add
       local.set $5
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $11
     i32.store $0 offset=16
     local.get $0
     local.get $11
     i32.store $0
     local.get $11
     if
      local.get $0
      local.get $11
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $6
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $4
     i32.store $0 offset=16
     local.get $0
     local.get $4
     i32.store $0 offset=8
     local.get $4
     if
      local.get $0
      local.get $4
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $8
     i32.store $0 offset=12
     local.get $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0 offset=16
     local.get $0
     local.get $0
     i32.load $0 offset=20
     i32.store $0 offset=16
     local.get $3
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.load $0 offset=8
    local.tee $4
    i32.store $0 offset=8
    local.get $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=16
    local.tee $5
    i32.const 1
    i32.add
    i32.store $0 offset=16
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $4
    local.get $5
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store $0
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=20
    i32.const 1
    i32.add
    i32.store $0 offset=20
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    local.set $2
    local.get $1
    local.get $0
    i32.store $0
    local.get $3
    local.get $2
    local.get $7
    local.get $0
    i32.load $0 offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load $0
    i32.store $0 offset=8
    local.get $0
    local.get $3
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#addValue (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   end
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.load $0
    local.tee $0
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   if (result i32)
    local.get $3
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 8
    i32.eq
   else
    i32.const 0
   end
   if
    block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj1 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=16
     local.get $3
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
     local.tee $0
     i32.store $0 offset=20
     i32.const 0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 8
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj1
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 9808
     i32.const 9872
     i32.const 78
     i32.const 8
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=8
    local.get $3
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i64.const 0
    i64.store $0
    local.get $3
    i64.const 0
    i64.store $0 offset=8
    local.get $3
    local.get $0
    i32.store $0 offset=12
    local.get $3
    local.get $0
    i32.load $0
    local.tee $0
    i32.store $0
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=8
    local.get $0
    local.get $1
    local.get $2
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
    local.tee $1
    i32.store $0 offset=24
    local.get $1
    if (result i32)
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 15
     i32.eq
    else
     i32.const 0
    end
    if
     block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Arr4 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=8
      local.get $1
      local.get $0
      call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
      local.tee $0
      i32.store $0 offset=28
      i32.const 0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 15
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Arr4
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 9808
      i32.const 9872
      i32.const 80
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $2
     i32.store $0 offset=4
     local.get $1
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i32.const 0
     i32.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0 offset=8
     local.get $1
     local.get $0
     i32.load $0
     local.tee $0
     i32.store $0
     local.get $1
     local.get $2
     i32.store $0 offset=4
     local.get $0
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $4
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $5
   local.get $2
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0
   i32.sub
   local.set $0
   local.get $2
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $4
   i32.add
   local.get $1
   i32.add
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   local.get $3
   i32.const 1
   i32.sub
   local.get $1
   i32.sub
   local.tee $0
   local.get $2
   i32.add
   local.tee $4
   local.get $2
   i32.lt_u
   if
    i32.const 0
    i32.const 9040
    i32.const 770
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   local.get $1
   local.set $0
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.lt_u
    if
     block $while-break|0
      local.get $2
      i32.load8_u $0
      local.set $5
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      local.get $5
      i32.const 128
      i32.and
      if
       local.get $2
       local.get $4
       i32.eq
       br_if $while-break|0
       local.get $2
       i32.load8_u $0
       i32.const 63
       i32.and
       local.set $3
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       local.get $5
       i32.const 224
       i32.and
       i32.const 192
       i32.eq
       if
        local.get $0
        local.get $5
        i32.const 31
        i32.and
        i32.const 6
        i32.shl
        local.get $3
        i32.or
        i32.store16 $0
       else
        local.get $2
        local.get $4
        i32.eq
        br_if $while-break|0
        local.get $2
        i32.load8_u $0
        i32.const 63
        i32.and
        local.set $6
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        local.get $5
        i32.const 240
        i32.and
        i32.const 224
        i32.eq
        if
         local.get $5
         i32.const 15
         i32.and
         i32.const 12
         i32.shl
         local.get $3
         i32.const 6
         i32.shl
         i32.or
         local.get $6
         i32.or
         local.set $3
        else
         local.get $2
         local.get $4
         i32.eq
         br_if $while-break|0
         local.get $2
         i32.load8_u $0
         i32.const 63
         i32.and
         local.get $5
         i32.const 7
         i32.and
         i32.const 18
         i32.shl
         local.get $3
         i32.const 12
         i32.shl
         i32.or
         local.get $6
         i32.const 6
         i32.shl
         i32.or
         i32.or
         local.set $3
         local.get $2
         i32.const 1
         i32.add
         local.set $2
        end
        local.get $3
        i32.const 65536
        i32.lt_u
        if
         local.get $0
         local.get $3
         i32.store16 $0
        else
         local.get $0
         local.get $3
         i32.const 65536
         i32.sub
         local.tee $3
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         local.get $3
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         i32.or
         i32.store $0
         local.get $0
         i32.const 2
         i32.add
         local.set $0
        end
       end
      else
       local.get $0
       local.get $5
       i32.store16 $0
      end
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      br $while-continue|0
     end
    end
   end
   local.get $1
   local.get $0
   local.get $1
   i32.sub
   call $~lib/rt/itcms/__renew
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $4
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 9312
   return
  end
  local.get $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 9312
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0 offset=4
    local.get $5
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     local.get $2
     local.get $5
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $2
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 9312
  i32.store $0 offset=8
  local.get $1
  local.get $2
  local.get $4
  i32.const 9308
  i32.load $0
  i32.const 1
  i32.shr_u
  local.tee $1
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0 offset=12
  i32.const 0
  local.set $2
  loop $for-loop|1
   local.get $2
   local.get $4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=4
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $5
     local.get $3
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     local.get $6
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $6
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $3
     local.get $6
     i32.add
     local.set $3
    end
    local.get $1
    if
     local.get $5
     local.get $3
     i32.const 1
     i32.shl
     i32.add
     i32.const 9312
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $1
     local.get $3
     i32.add
     local.set $3
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $5
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   memory.copy $0 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.tee $1
  i32.const 48
  i32.sub
  local.tee $0
  i32.const 9
  i32.gt_s
  if
   local.get $1
   i32.const 55
   i32.sub
   local.tee $0
   i32.const 10
   i32.lt_s
   local.get $0
   i32.const 15
   i32.gt_s
   i32.or
   if
    local.get $1
    i32.const 87
    i32.sub
    local.set $0
   end
  end
  local.get $0
  i32.const 16
  i32.lt_s
  local.get $0
  i32.const 0
  i32.ge_s
  i32.and
  i32.eqz
  if
   i32.const 10640
   i32.const 9472
   i32.const 319
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   local.tee $2
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   local.set $4
   local.get $3
   local.get $1
   i32.store $0
   block $__inlined_func$~lib/string/String#concat
    local.get $1
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const -2
    i32.and
    local.tee $3
    local.get $4
    i32.add
    local.tee $0
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9312
     local.set $0
     br $__inlined_func$~lib/string/String#concat
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0 offset=4
    local.get $0
    local.get $2
    local.get $4
    memory.copy $0 $0
    local.get $0
    local.get $4
    i32.add
    local.get $1
    local.get $3
    memory.copy $0 $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 10096
   i32.store $0
   i32.const 10096
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10096
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10288
   i32.store $0
   i32.const 10288
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10288
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10320
   i32.store $0
   i32.const 10320
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10320
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10352
   i32.store $0
   i32.const 10352
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10384
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10416
   i32.store $0
   i32.const 10416
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10448
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10480
   i32.store $0
   i32.const 10480
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10512
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10544
   i32.store $0
   i32.const 10544
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10576
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10608
   i32.store $0
   i32.const 10608
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.get $2
    i32.const 12
    i32.shl
    local.get $3
    i32.const 8
    i32.shl
    i32.add
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.add
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    i32.const 2
    local.get $0
    i32.const 65535
    i32.gt_u
    local.tee $1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $1
    if
     local.get $0
     i32.const 1114111
     i32.gt_u
     if
      i32.const 0
      i32.const 9040
      i32.const 39
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     local.get $2
     local.get $0
     i32.const 65536
     i32.sub
     local.tee $0
     i32.const 10
     i32.shr_u
     i32.const 55296
     i32.or
     local.get $0
     i32.const 1023
     i32.and
     i32.const 56320
     i32.or
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
    else
     local.get $2
     local.get $0
     i32.store16 $0
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10704
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   call $~lib/string/String.fromCharCode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 10704
   local.get $0
   call $~lib/string/String.__concat
   i32.const 9472
   i32.const 306
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 10096
   i32.store $0
   i32.const 10096
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    i32.const 10128
    i32.const 9472
    i32.const 245
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $4
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $3
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $3
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 32
   i32.store $0 offset=8
   local.get $5
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $5
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0 offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.tee $2
    i32.const 32
    i32.lt_s
    if
     i32.const 10208
     i32.const 9472
     i32.const 254
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 10096
    i32.store $0
    i32.const 10096
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $2
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     i32.const 1
     global.set $~argumentsLength
     local.get $2
     local.get $0
     local.get $1
     call $~lib/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
     local.tee $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $0
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $3
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 9312
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     local.get $3
     i32.store $0
     local.get $3
     i32.load $0 offset=4
     local.set $1
     local.get $0
     local.get $3
     i32.store $0
     local.get $3
     i32.load $0 offset=12
     local.set $2
     local.get $0
     i32.const 9312
     i32.store $0 offset=4
     local.get $1
     local.get $2
     call $~lib/util/string/joinStringArray
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 10288
     i32.store $0
     i32.const 10288
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $2
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $2
      i32.load $0 offset=4
      local.get $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $3
       i32.store $0
       local.get $2
       local.get $0
       i32.store $0 offset=20
       local.get $0
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=16
       i32.const 1
       global.set $~argumentsLength
       local.get $2
       local.get $1
       call $~lib/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=4
       local.get $3
       local.get $1
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $3
      i32.store $0
      local.get $1
      local.get $0
      i32.store $0 offset=16
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $3
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.load $0 offset=4
      local.set $1
     end
     br $for-loop|0
    end
   end
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#pop (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  i32.le_s
  if
   i32.const 10944
   i32.const 9264
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#popObject (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.const 1
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#pop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseObject (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 9648
   i32.store $0
   i32.const 9648
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9312
   i32.store $0 offset=4
   local.get $2
   i32.const 9312
   i32.store $0
   local.get $2
   i32.const 9312
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   i32.const 4
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 24
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 3
   i32.store $0 offset=4
   local.get $6
   local.get $5
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0 offset=8
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 4
   i32.store $0 offset=12
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $6
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=8
   local.get $2
   local.get $4
   i32.store $0 offset=12
   local.get $3
   local.get $1
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $1
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $1
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 9984
    i32.store $0
    i32.const 9984
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $2
    i32.ne
    if
     local.get $1
     if
      i32.const 0
      local.set $1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 10016
      i32.store $0
      i32.const 10016
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $2
      i32.ne
      if
       i32.const 10048
       i32.const 9472
       i32.const 190
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $2
     local.get $3
     i32.store $0
     local.get $3
     if
      local.get $2
      local.get $3
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 10784
     i32.store $0
     i32.const 10784
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $2
     i32.ne
     if
      i32.const 10816
      i32.const 9472
      i32.const 207
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 9984
   i32.store $0
   i32.const 9984
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    i32.const 10864
    i32.const 9472
    i32.const 197
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Handler#popObject
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 10992
   i32.store $0
   i32.const 10992
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.load $0
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9312
   i32.store $0 offset=4
   local.get $1
   i32.const 9312
   i32.store $0
   local.get $1
   i32.const 9312
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   i32.const 4
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0
   local.tee $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=8
    local.get $3
    local.get $4
    i32.store $0 offset=12
    local.get $1
    local.get $2
    local.get $4
    call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=12
   local.get $2
   local.get $1
   i32.load $0
   local.tee $1
   i32.store $0 offset=4
   local.get $2
   local.get $4
   i32.store $0 offset=8
   local.get $1
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $1
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 11024
    i32.store $0
    i32.const 11024
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $2
    i32.ne
    if
     local.get $1
     if
      i32.const 0
      local.set $1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 10016
      i32.store $0
      i32.const 10016
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $2
      i32.ne
      if
       i32.const 10048
       i32.const 9472
       i32.const 224
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 11024
   i32.store $0
   i32.const 11024
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    i32.const 11056
    i32.const 9472
    i32.const 230
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Handler#popObject
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    local.get $2
    call $~lib/string/String#charCodeAt
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.get $3
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 11168
     i32.store $0 offset=8
     local.get $0
     local.get $1
     i32.store $0 offset=12
     i32.const 11168
     local.get $1
     call $~lib/string/String.__concat
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 11216
     i32.store $0 offset=4
     local.get $0
     i32.const 11216
     call $~lib/string/String.__concat
     i32.const 9472
     i32.const 396
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#setBoolean (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 1
   i32.const 17
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $5
   i32.store $0 offset=4
   local.get $5
   local.get $2
   i32.store8 $0
   local.get $4
   local.get $5
   i32.store $0 offset=4
   local.get $4
   local.get $5
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $0
   local.get $1
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/strtod (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 f64)
  (local $9 i32)
  (local $10 f64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $0
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    local.tee $5
    i32.eqz
    br_if $folding-inner0
    local.get $0
    i32.load16_u $0
    local.set $4
    f64.const 1
    local.set $10
    loop $while-continue|0
     local.get $5
     if (result i32)
      block $__inlined_func$~lib/util/string/isSpace (result i32)
       local.get $4
       i32.const 128
       i32.or
       i32.const 160
       i32.eq
       local.get $4
       i32.const 9
       i32.sub
       i32.const 4
       i32.le_u
       i32.or
       local.get $4
       i32.const 5760
       i32.lt_u
       br_if $__inlined_func$~lib/util/string/isSpace
       drop
       i32.const 1
       local.get $4
       i32.const -8192
       i32.add
       i32.const 10
       i32.le_u
       br_if $__inlined_func$~lib/util/string/isSpace
       drop
       block $break|0
        block $case0|0
         local.get $4
         i32.const 5760
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8232
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8233
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8239
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8287
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 12288
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 65279
         i32.eq
         br_if $case0|0
         br $break|0
        end
        i32.const 1
        br $__inlined_func$~lib/util/string/isSpace
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.set $4
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|0
     end
    end
    local.get $5
    i32.eqz
    br_if $folding-inner0
    local.get $4
    i32.const 45
    i32.eq
    if (result i32)
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     br_if $folding-inner0
     f64.const -1
     local.set $10
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u $0
    else
     local.get $4
     i32.const 43
     i32.eq
     if (result i32)
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      br_if $folding-inner0
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
     else
      local.get $4
     end
    end
    local.tee $4
    i32.const 73
    i32.eq
    local.get $5
    i32.const 8
    i32.ge_s
    i32.and
    if
     local.get $0
     i64.load $0
     i64.const 29555310648492105
     i64.eq
     if (result i32)
      local.get $0
      i64.load $0 offset=8
      i64.const 34058970405077102
      i64.eq
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $10
      f64.const inf
      f64.mul
      return
     end
     br $folding-inner0
    end
    local.get $4
    i32.const 46
    i32.ne
    local.get $4
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
    i32.and
    br_if $folding-inner0
    local.get $0
    local.set $3
    loop $while-continue|1
     local.get $4
     i32.const 48
     i32.eq
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.set $4
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|1
     end
    end
    local.get $5
    i32.const 0
    i32.le_s
    br_if $folding-inner1
    local.get $4
    i32.const 46
    i32.eq
    if
     local.get $0
     local.get $3
     i32.eq
     local.set $3
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     local.get $3
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     i32.and
     br_if $folding-inner0
     i32.const 1
     local.set $9
     loop $for-loop|2
      local.get $0
      i32.load16_u $0
      local.tee $4
      i32.const 48
      i32.eq
      if
       local.get $5
       i32.const 1
       i32.sub
       local.set $5
       local.get $2
       i32.const 1
       i32.sub
       local.set $2
       local.get $0
       i32.const 2
       i32.add
       local.set $0
       br $for-loop|2
      end
     end
     local.get $5
     i32.const 0
     i32.le_s
     br_if $folding-inner1
     local.get $3
     local.get $2
     i32.eqz
     i32.and
     local.get $4
     i32.const 48
     i32.sub
     i32.const 10
     i32.ge_u
     i32.and
     br_if $folding-inner0
    end
    local.get $4
    i32.const 48
    i32.sub
    local.set $3
    loop $for-loop|3
     local.get $9
     i32.eqz
     local.get $4
     i32.const 46
     i32.eq
     i32.and
     local.get $3
     i32.const 10
     i32.lt_u
     i32.or
     if
      block $for-break3
       local.get $3
       i32.const 10
       i32.lt_u
       if
        local.get $1
        i32.const 19
        i32.lt_s
        if (result i64)
         local.get $3
         i64.extend_i32_u
         local.get $6
         i64.const 10
         i64.mul
         i64.add
        else
         local.get $6
         local.get $3
         i32.const 0
         i32.ne
         i64.extend_i32_u
         i64.or
        end
        local.set $6
        local.get $1
        i32.const 1
        i32.add
        local.set $1
       else
        local.get $1
        local.set $2
        i32.const 1
        local.set $9
       end
       local.get $5
       i32.const 1
       i32.sub
       local.tee $5
       i32.eqz
       br_if $for-break3
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u $0
       local.tee $4
       i32.const 48
       i32.sub
       local.set $3
       br $for-loop|3
      end
     end
    end
    block $~lib/util/string/scientific|inlined.0
     local.get $6
     i64.eqz
     local.get $2
     local.get $1
     local.get $9
     select
     i32.const 19
     local.get $1
     local.get $1
     i32.const 19
     i32.gt_s
     select
     i32.sub
     block $~lib/util/string/parseExp|inlined.0 (result i32)
      i32.const 1
      local.set $9
      i32.const 0
      local.set $3
      i32.const 0
      local.get $0
      i32.load16_u $0
      i32.const 32
      i32.or
      i32.const 101
      i32.ne
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      i32.const 0
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.tee $1
      i32.const 45
      i32.eq
      if (result i32)
       i32.const 0
       local.get $5
       i32.const 1
       i32.sub
       local.tee $5
       i32.eqz
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       i32.const -1
       local.set $9
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u $0
      else
       local.get $1
       i32.const 43
       i32.eq
       if (result i32)
        i32.const 0
        local.get $5
        i32.const 1
        i32.sub
        local.tee $5
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
       else
        local.get $1
       end
      end
      local.set $4
      loop $while-continue|4
       local.get $4
       i32.const 48
       i32.eq
       if
        i32.const 0
        local.get $5
        i32.const 1
        i32.sub
        local.tee $5
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
        local.set $4
        br $while-continue|4
       end
      end
      local.get $4
      i32.const 48
      i32.sub
      local.set $4
      loop $for-loop|5
       local.get $4
       i32.const 10
       i32.lt_u
       i32.const 0
       local.get $5
       select
       if
        local.get $9
        i32.const 3200
        i32.mul
        local.get $3
        i32.const 3200
        i32.ge_s
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $3
        i32.const 10
        i32.mul
        local.get $4
        i32.add
        local.set $3
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
        i32.const 48
        i32.sub
        local.set $4
        br $for-loop|5
       end
      end
      local.get $3
      local.get $9
      i32.mul
     end
     i32.add
     local.tee $0
     i32.const -342
     i32.lt_s
     i32.or
     br_if $~lib/util/string/scientific|inlined.0
     f64.const inf
     local.set $8
     local.get $0
     i32.const 308
     i32.gt_s
     br_if $~lib/util/string/scientific|inlined.0
     local.get $6
     f64.convert_i64_u
     local.set $8
     local.get $0
     i32.eqz
     br_if $~lib/util/string/scientific|inlined.0
     local.get $0
     i32.const 37
     i32.le_s
     local.get $0
     i32.const 22
     i32.gt_s
     i32.and
     if
      local.get $8
      local.get $0
      i32.const 3
      i32.shl
      i32.const 11120
      i32.add
      f64.load $0
      f64.mul
      local.set $8
      i32.const 22
      local.set $0
     end
     local.get $6
     i64.const 9007199254740991
     i64.le_u
     if (result i32)
      local.get $0
      i32.const 31
      i32.shr_s
      local.tee $1
      local.get $0
      local.get $1
      i32.add
      i32.xor
      i32.const 22
      i32.le_s
     else
      i32.const 0
     end
     if (result f64)
      local.get $0
      i32.const 0
      i32.gt_s
      if
       local.get $8
       local.get $0
       i32.const 3
       i32.shl
       i32.const 11296
       i32.add
       f64.load $0
       f64.mul
       local.set $8
       br $~lib/util/string/scientific|inlined.0
      end
      local.get $8
      i32.const 0
      local.get $0
      i32.sub
      i32.const 3
      i32.shl
      i32.const 11296
      i32.add
      f64.load $0
      f64.div
     else
      local.get $0
      i32.const 0
      i32.lt_s
      if (result f64)
       local.get $6
       local.get $6
       i64.clz
       local.tee $7
       i64.shl
       local.set $6
       local.get $0
       i64.extend_i32_s
       local.get $7
       i64.sub
       local.set $7
       loop $for-loop|6
        local.get $0
        i32.const -14
        i32.le_s
        if
         local.get $6
         i64.const 6103515625
         i64.rem_u
         local.get $6
         i64.const 6103515625
         i64.div_u
         local.tee $6
         i64.clz
         local.tee $11
         i64.const 18
         i64.sub
         i64.shl
         f64.convert_i64_u
         f64.const 0.00004294967296
         f64.mul
         f64.nearest
         i64.trunc_sat_f64_u
         local.get $6
         local.get $11
         i64.shl
         i64.add
         local.set $6
         local.get $7
         local.get $11
         i64.sub
         local.set $7
         local.get $0
         i32.const 14
         i32.add
         local.set $0
         br $for-loop|6
        end
       end
       local.get $6
       i32.const 0
       local.get $0
       i32.sub
       call $~lib/math/ipow32
       i64.extend_i32_s
       local.tee $12
       i64.div_u
       local.tee $13
       i64.clz
       local.set $11
       local.get $6
       local.get $12
       i64.rem_u
       f64.convert_i64_u
       i64.reinterpret_f64
       local.get $11
       i64.const 52
       i64.shl
       i64.add
       f64.reinterpret_i64
       local.get $12
       f64.convert_i64_u
       f64.div
       i64.trunc_sat_f64_u
       local.get $13
       local.get $11
       i64.shl
       i64.add
       f64.convert_i64_u
       local.get $7
       local.get $11
       i64.sub
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      else
       local.get $6
       local.get $6
       i64.ctz
       local.tee $7
       i64.shr_u
       local.set $6
       local.get $7
       local.get $0
       i64.extend_i32_s
       i64.add
       global.set $~lib/util/string/__fixmulShift
       loop $for-loop|7
        local.get $0
        i32.const 13
        i32.ge_s
        if
         i64.const 32
         local.get $6
         i64.const 32
         i64.shr_u
         i64.const 1220703125
         i64.mul
         local.get $6
         i64.const 4294967295
         i64.and
         i64.const 1220703125
         i64.mul
         local.tee $6
         i64.const 32
         i64.shr_u
         i64.add
         local.tee $7
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         i32.clz
         i64.extend_i32_u
         local.tee $11
         i64.sub
         local.tee $12
         global.get $~lib/util/string/__fixmulShift
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $6
         local.get $11
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         local.get $7
         local.get $11
         i64.shl
         local.get $6
         i64.const 4294967295
         i64.and
         local.get $12
         i64.shr_u
         i64.or
         i64.add
         local.set $6
         local.get $0
         i32.const 13
         i32.sub
         local.set $0
         br $for-loop|7
        end
       end
       local.get $0
       call $~lib/math/ipow32
       i64.extend_i32_u
       local.tee $7
       local.get $6
       i64.const 4294967295
       i64.and
       i64.mul
       local.set $11
       i64.const 32
       local.get $6
       i64.const 32
       i64.shr_u
       local.get $7
       i64.mul
       local.get $11
       i64.const 32
       i64.shr_u
       i64.add
       local.tee $6
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       i32.clz
       i64.extend_i32_u
       local.tee $7
       i64.sub
       local.tee $12
       global.get $~lib/util/string/__fixmulShift
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $11
       local.get $7
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       local.get $6
       local.get $7
       i64.shl
       local.get $11
       i64.const 4294967295
       i64.and
       local.get $12
       i64.shr_u
       i64.or
       i64.add
       f64.convert_i64_u
       global.get $~lib/util/string/__fixmulShift
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      end
     end
     local.set $8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $8
    local.get $10
    f64.copysign
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  f64.const 0
  f64.mul
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNumber (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i64)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i32.const 0
   i32.const 20
   memory.fill $0
   i32.const 9312
   local.set $1
   local.get $6
   i32.const 9312
   i32.store $0
   local.get $6
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
   i32.const 45
   i32.eq
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 9312
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.store $0 offset=12
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.set $6
    i32.const 1
    global.set $~argumentsLength
    local.get $6
    call $~lib/string/String.fromCharCode@varargs
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $1
    i32.const 9312
    local.get $6
    call $~lib/string/String.__concat
    local.tee $1
    i32.store $0
    f64.const -1
   else
    f64.const 1
   end
   local.set $7
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.const 48
    i32.ge_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 57
     i32.le_s
    else
     i32.const 0
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 46
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 45
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 43
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 69
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 101
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $9
     i32.const 1
     global.set $~argumentsLength
     local.get $8
     call $~lib/string/String.fromCharCode@varargs
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $9
     local.get $1
     local.get $6
     call $~lib/string/String.__concat
     local.tee $1
     i32.store $0
     local.get $8
     i32.const 101
     i32.eq
     local.get $8
     i32.const 69
     i32.eq
     i32.or
     local.get $8
     i32.const 46
     i32.eq
     i32.or
     local.get $8
     i32.const 43
     i32.eq
     i32.or
     local.get $8
     i32.const 45
     i32.eq
     i32.or
     if
      i32.const 1
      local.set $2
     else
      local.get $4
      local.get $4
      f64.const 10
      f64.mul
      local.get $8
      i32.const 48
      i32.sub
      f64.convert_i32_s
      f64.add
      local.get $2
      select
      local.set $4
      local.get $3
      i32.const 1
      i32.add
      local.set $3
     end
     br $while-continue|0
    end
   end
   local.get $3
   i32.const 0
   i32.gt_s
   if
    local.get $2
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0 offset=4
     local.get $2
     i32.const 11280
     i32.store $0 offset=8
     local.get $1
     i32.const 11280
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=12
     local.get $2
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $2
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 0
     i32.store $0
     local.get $0
     local.get $1
     i32.store $0
     local.get $1
     call $~lib/util/string/strtod
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     i32.const 8
     i32.const 18
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     i32.store $0 offset=4
     local.get $6
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store $0
     local.get $0
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.const 19
      call $~lib/rt/itcms/__new
      local.tee $0
      i32.store $0
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $8
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $4
     f64.store $0
     local.get $8
     local.get $0
     i32.store $0 offset=4
     local.get $8
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     local.get $3
     local.get $2
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=12
     local.get $1
     local.get $0
     i32.load $0
     local.tee $2
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i32.const 8
     i32.const 20
     call $~lib/rt/itcms/__new
     local.tee $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $3
     i32.store $0 offset=4
     local.get $3
     local.get $4
     local.get $7
     f64.mul
     i64.trunc_sat_f64_s
     i64.store $0
     local.get $6
     local.get $3
     i32.store $0 offset=4
     local.get $6
     local.get $3
     call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
     local.tee $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     local.get $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $2
     local.get $0
     local.get $3
     call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseObject
   local.tee $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseArray
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 10096
    i32.store $0
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseString
     i32.const 10096
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $1
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      local.set $1
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseString
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=12
     local.get $1
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load $0
     local.tee $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readString
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $5
     i32.store $0
     local.get $1
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i32.const 0
     i32.store $0
     local.get $2
     local.get $5
     i32.store $0
     local.get $2
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     i32.const 4
     i32.const 16
     call $~lib/rt/itcms/__new
     local.tee $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $2
     i32.store $0 offset=4
     local.get $6
     local.get $5
     i32.store $0 offset=8
     local.get $2
     local.get $5
     i32.store $0
     local.get $5
     if
      local.get $2
      local.get $5
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $2
     i32.store $0 offset=4
     local.get $5
     local.get $2
     call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
     local.tee $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     local.get $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=12
     local.get $3
     local.get $4
     local.get $2
     call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
     local.set $1
    end
   end
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseBoolean (result i32)
     local.get $1
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 11136
     i32.store $0
     block $folding-inner001
      i32.const 11136
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $1
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 11136
       i32.store $0 offset=4
       local.get $0
       i32.const 11136
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       local.get $0
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load $0
       local.tee $2
       i32.store $0 offset=4
       local.get $1
       local.get $2
       i32.const 0
       call $~lib/assemblyscript-json/assembly/JSON/Handler#setBoolean
       br $folding-inner001
      end
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
      local.set $1
      global.get $~lib/memory/__stack_pointer
      i32.const 11248
      i32.store $0
      i32.const 11248
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $1
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 11248
       i32.store $0 offset=4
       local.get $0
       i32.const 11248
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       local.get $0
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load $0
       local.tee $2
       i32.store $0 offset=4
       local.get $1
       local.get $2
       i32.const 1
       call $~lib/assemblyscript-json/assembly/JSON/Handler#setBoolean
       br $folding-inner001
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseBoolean
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
    end
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNumber
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNull (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 11504
     i32.store $0
     i32.const 11504
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      i32.const 11504
      i32.store $0 offset=4
      local.get $0
      i32.const 11504
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0
      local.tee $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=12
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load $0
      local.tee $2
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 15496
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i64.const 0
      i64.store $0
      local.get $3
      i64.const 0
      i64.store $0 offset=8
      local.get $3
      global.get $~lib/assemblyscript-json/assembly/JSON/NULL
      local.tee $4
      i32.store $0
      local.get $3
      local.get $1
      i32.store $0 offset=4
      local.get $3
      local.get $2
      i32.store $0 offset=8
      local.get $3
      local.get $4
      i32.store $0 offset=12
      local.get $1
      local.get $2
      local.get $4
      call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNull
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
    end
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/assemblyscript-json/assembly/util/index/Buffer.fromString
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 12
   i32.const 14
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 9312
   i32.store $0 offset=8
   local.get $0
   i32.const 9312
   i32.store $0
   local.get $0
   i32.const 9312
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue
   i32.eqz
   if
    i32.const 11536
    i32.const 9472
    i32.const 144
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    i32.load $0
    local.tee $2
    i32.store $0
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.load $0
     local.tee $2
     i32.store $0
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#pop
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=20
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
   i32.const 0
   i32.ne
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
   local.tee $0
   i32.eqz
   if
    i32.const 11728
    i32.const 11792
    i32.const 105
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load $0 offset=4
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/params~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Integer (result i32)
    local.get $1
    local.get $0
    i32.store $0 offset=4
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 20
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Integer
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 9808
    i32.const 11600
    i32.const 24
    i32.const 156
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i64.load $0
   local.set $3
   local.get $1
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   i32.wrap_i64
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/typedarray/Uint32Array#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 12
  i32.const 24
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint32Array#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 8768
    i32.const 9264
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $3
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  i32.load $0 offset=16
  local.tee $4
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor
  local.tee $5
  i32.store $0 offset=4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    local.get $3
    local.get $2
    i32.const 12
    i32.mul
    i32.add
    local.tee $6
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $5
     i32.store $0
     local.get $0
     local.get $6
     i32.load $0 offset=4
     local.tee $0
     i32.store $0 offset=8
     local.get $5
     local.get $1
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#getString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Obj#get
   local.tee $1
   i32.store $0 offset=8
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0
    local.get $0
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 0
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0
    local.get $1
    if (result i32)
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 16
     i32.eq
    else
     i32.const 0
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 0
    local.set $0
   end
   local.get $0
   if
    block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Str1 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     i32.const 0
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 16
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Str1
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 9808
     i32.const 9872
     i32.const 361
     i32.const 21
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 8768
   i32.const 9264
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/params/get_max_brand_num (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   i32.const 2848
   i32.store $0
   i32.const 2848
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   local.get $5
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 2848
    i32.store $0
    local.get $1
    i32.const 2848
    local.get $5
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj (result i32)
     global.get $~lib/memory/__stack_pointer
     local.set $1
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/params/Traits
     local.tee $2
     i32.store $0 offset=12
     local.get $2
     call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     local.get $2
     call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#values
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $1
     local.get $2
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $1
     i32.store $0 offset=16
     i32.const 0
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 8
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj
     drop
     i32.const 1
    end
    if (result i32)
     local.get $1
    else
     i32.const 9808
     i32.const 11600
     i32.const 34
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $2
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $1
    i32.store $0 offset=8
    local.get $6
    i32.const 11904
    i32.store $0 offset=12
    local.get $6
    local.get $1
    i32.const 11904
    call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
    local.tee $1
    i32.store $0 offset=24
    local.get $1
    i32.eqz
    if
     i32.const 9344
     i32.const 11600
     i32.const 35
     i32.const 39
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $6
    local.get $1
    call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
    local.tee $1
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 11968
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.const 11968
    call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
    local.tee $2
    i32.store $0 offset=32
    local.get $2
    i32.eqz
    if
     i32.const 9344
     i32.const 11600
     i32.const 36
     i32.const 39
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $6
    local.get $2
    call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
    local.tee $2
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=8
    local.get $3
    local.get $1
    call $~lib/string/String.__eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/params/SkillEasilyToGetParam
     local.tee $1
     i32.store $0
     local.get $1
     i32.const 0
     call $~lib/array/Array<i32>#__get
     local.get $4
     i32.add
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $3
     i32.store $0
     local.get $1
     local.get $2
     i32.store $0 offset=8
     local.get $3
     local.get $2
     call $~lib/string/String.__eq
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/params/SkillEasilyToGetParam
      local.tee $1
      i32.store $0
      local.get $1
      i32.const 2
      call $~lib/array/Array<i32>#__get
      local.get $4
      i32.add
     else
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/params/SkillEasilyToGetParam
      local.tee $1
      i32.store $0
      local.get $1
      i32.const 1
      call $~lib/array/Array<i32>#__get
      local.get $4
      i32.add
     end
    end
    local.set $4
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint32Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 8768
   i32.const 9200
   i32.const 889
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/params/get_max_brand_num_drink (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   i32.const 2848
   i32.store $0
   i32.const 2848
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   local.get $5
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 2848
    i32.store $0
    local.get $3
    i32.const 2848
    local.get $5
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $6
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj (result i32)
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/params/Traits
     local.tee $4
     i32.store $0 offset=12
     local.get $4
     call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     local.get $4
     call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#values
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $3
     local.get $4
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $3
     i32.store $0 offset=16
     i32.const 0
     local.get $3
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 8
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj
     drop
     i32.const 1
    end
    if (result i32)
     local.get $3
    else
     i32.const 9808
     i32.const 11600
     i32.const 59
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $4
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $3
    i32.store $0 offset=8
    local.get $7
    i32.const 11904
    i32.store $0 offset=12
    local.get $7
    local.get $3
    i32.const 11904
    call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
    local.tee $3
    i32.store $0 offset=24
    local.get $3
    i32.eqz
    if
     i32.const 9344
     i32.const 11600
     i32.const 60
     i32.const 39
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $7
    local.get $3
    call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
    local.tee $3
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 11968
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 11968
    call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
    local.tee $4
    i32.store $0 offset=32
    local.get $4
    i32.eqz
    if
     i32.const 9344
     i32.const 11600
     i32.const 61
     i32.const 39
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $7
    local.get $4
    call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
    local.tee $4
    i32.store $0 offset=36
    local.get $1
    local.get $5
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $6
     i32.store $0
     local.get $7
     local.get $3
     i32.store $0 offset=8
     local.get $6
     local.get $3
     call $~lib/string/String.__eq
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/params/SkillEasilyToGetParam
      local.tee $3
      i32.store $0
      local.get $3
      i32.const 0
      call $~lib/array/Array<i32>#__get
      local.get $2
      i32.add
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $6
      i32.store $0
      local.get $3
      local.get $4
      i32.store $0 offset=8
      local.get $6
      local.get $4
      call $~lib/string/String.__eq
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       global.get $assembly/params/SkillEasilyToGetParam
       local.tee $3
       i32.store $0
       local.get $3
       i32.const 2
       call $~lib/array/Array<i32>#__get
       local.get $2
       i32.add
      else
       global.get $~lib/memory/__stack_pointer
       global.get $assembly/params/SkillEasilyToGetParam
       local.tee $3
       i32.store $0
       local.get $3
       i32.const 1
       call $~lib/array/Array<i32>#__get
       local.get $2
       i32.add
      end
     end
     local.set $2
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:assembly/params
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 44
   memory.fill $0
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 48264
   i32.sub
   i32.const 1
   i32.shr_u
   global.set $~lib/rt/itcms/threshold
   i32.const 8692
   i32.const 8688
   i32.store $0
   i32.const 8696
   i32.const 8688
   i32.store $0
   i32.const 8688
   global.set $~lib/rt/itcms/pinSpace
   i32.const 8724
   i32.const 8720
   i32.store $0
   i32.const 8728
   i32.const 8720
   i32.store $0
   i32.const 8720
   global.set $~lib/rt/itcms/toSpace
   i32.const 8868
   i32.const 8864
   i32.store $0
   i32.const 8872
   i32.const 8864
   i32.store $0
   i32.const 8864
   global.set $~lib/rt/itcms/fromSpace
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 4
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 11
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $0
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $~lib/assemblyscript-json/assembly/JSON/_JSON.handler
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.handler
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   i32.const 8
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   global.set $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.const 21
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $~lib/assemblyscript-json/assembly/JSON/NULL
   block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2896
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 2896
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 2896
    call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
    local.tee $0
    i32.store $0 offset=16
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 8
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 9808
    i32.const 11600
    i32.const 19
    i32.const 87
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   i32.const 24
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   local.get $4
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0 offset=8
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 4
   i32.store $0 offset=12
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=20
   local.get $5
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
    local.get $1
    i32.gt_s
    if
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   global.set $assembly/params/json_brand_names
   block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj0 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 3872
    i32.store $0 offset=20
    local.get $0
    i32.const 3872
    i32.store $0 offset=4
    local.get $0
    i32.const 3872
    call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
    local.tee $0
    i32.store $0 offset=24
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 8
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj0
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 9808
    i32.const 11600
    i32.const 23
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   global.set $assembly/params/json_brand_data
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   global.get $assembly/params/json_brand_data
   local.tee $0
   i32.store $0 offset=28
   local.get $3
   i32.const 11664
   i32.store $0 offset=32
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11664
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.const 11664
   call $~lib/assemblyscript-json/assembly/JSON/Obj#get
   local.tee $0
   i32.store $0 offset=8
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    if (result i32)
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 15
     i32.eq
    else
     i32.const 0
    end
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 0
    local.set $1
   end
   block $__inlined_func$~lib/assemblyscript-json/assembly/JSON/Obj#getArr
    local.get $1
    if
     block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Arr1 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=12
      i32.const 0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 15
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Arr1
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 9808
      i32.const 9872
      i32.const 401
      i32.const 21
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/Obj#getArr
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    local.set $0
   end
   local.get $3
   local.get $0
   i32.store $0 offset=36
   local.get $0
   i32.eqz
   if
    i32.const 9344
    i32.const 11600
    i32.const 24
    i32.const 56
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 11840
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.store $0
   local.get $0
   local.get $3
   i32.load $0 offset=12
   local.tee $4
   i32.const 22
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.load $0 offset=4
   local.set $6
   loop $for-loop|01
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $2
    local.get $4
    local.get $3
    i32.load $0 offset=12
    local.tee $0
    local.get $0
    local.get $4
    i32.gt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $3
     i32.store $0 offset=8
     local.get $7
     local.get $2
     i32.const 2
     i32.shl
     local.tee $0
     local.get $3
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.tee $1
     i32.store $0
     local.get $7
     local.get $3
     i32.store $0 offset=8
     i32.const 3
     global.set $~argumentsLength
     local.get $0
     local.get $6
     i32.add
     local.get $1
     local.get $2
     local.get $3
     i32.const 11840
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     i32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|01
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   global.set $assembly/params/SkillEasilyToGetParam
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/params/json_brand_data
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 11872
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11872
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.const 11872
   call $~lib/assemblyscript-json/assembly/JSON/Obj#get
   local.tee $0
   i32.store $0 offset=8
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    if (result i32)
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 8
     i32.eq
    else
     i32.const 0
    end
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 0
    local.set $1
   end
   block $__inlined_func$~lib/assemblyscript-json/assembly/JSON/Obj#getObj
    local.get $1
    if
     block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj1 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=12
      i32.const 0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 8
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj1
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 9808
      i32.const 9872
      i32.const 409
      i32.const 21
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/Obj#getObj
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    local.set $0
   end
   local.get $2
   local.get $0
   i32.store $0 offset=40
   local.get $0
   i32.eqz
   if
    i32.const 9344
    i32.const 11600
    i32.const 25
    i32.const 26
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   global.set $assembly/params/Traits
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/params/Traits
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
   call $~lib/typedarray/Uint32Array#constructor
   global.set $assembly/params/const_max_brand_num
   i32.const 0
   local.set $0
   loop $for-loop|09
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/params/const_max_brand_num
    local.tee $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/typedarray/Uint32Array#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/params/const_max_brand_num
     local.tee $1
     i32.store $0 offset=4
     local.get $1
     local.get $0
     local.get $0
     call $assembly/params/get_max_brand_num
     call $~lib/typedarray/Uint32Array#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|09
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 2848
   i32.store $0 offset=4
   i32.const 2848
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   local.set $0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/params/Traits
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
   local.get $0
   i32.mul
   call $~lib/typedarray/Uint32Array#constructor
   global.set $assembly/params/const_max_brand_num_drink
   i32.const 0
   local.set $0
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/params/const_max_brand_num_drink
    local.tee $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/typedarray/Uint32Array#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 2848
     i32.store $0 offset=4
     local.get $0
     i32.const 2848
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.div_s
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 2848
     i32.store $0 offset=4
     local.get $0
     i32.const 2848
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.rem_s
     local.set $2
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/params/const_max_brand_num_drink
     local.tee $3
     i32.store $0 offset=4
     local.get $3
     local.get $0
     local.get $1
     local.get $2
     call $assembly/params/get_max_brand_num_drink
     call $~lib/typedarray/Uint32Array#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 2848
   i32.store $0 offset=4
   i32.const 2848
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   local.set $0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/params/Traits
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
   local.get $0
   i32.mul
   call $~lib/typedarray/Uint32Array#constructor
   global.set $assembly/params/const_get_ability_weight
   i32.const 0
   local.set $0
   loop $for-loop|2
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/params/const_get_ability_weight
    local.tee $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/typedarray/Uint32Array#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 2848
     i32.store $0 offset=4
     local.get $0
     i32.const 2848
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.div_s
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 2848
     i32.store $0 offset=4
     local.get $0
     i32.const 2848
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.rem_s
     local.set $2
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/params/const_get_ability_weight
     local.tee $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i32.const 0
     i32.const 40
     memory.fill $0
     local.get $4
     i32.const 2848
     i32.store $0
     local.get $4
     i32.const 2848
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj3 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.set $4
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/params/Traits
      local.tee $5
      i32.store $0 offset=12
      local.get $5
      call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=8
      local.get $5
      call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#values
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $4
      local.get $5
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
      local.tee $1
      i32.store $0 offset=16
      i32.const 0
      local.get $1
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 8
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/assemblyscript-json/assembly/JSON/Obj3
      drop
      i32.const 1
     end
     if (result i32)
      local.get $1
     else
      i32.const 9808
      i32.const 11600
      i32.const 87
      i32.const 24
      call $~lib/builtins/abort
      unreachable
     end
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $1
     i32.store $0 offset=8
     local.get $4
     i32.const 11904
     i32.store $0 offset=12
     local.get $4
     local.get $1
     i32.const 11904
     call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
     local.tee $5
     i32.store $0 offset=24
     local.get $5
     i32.eqz
     if
      i32.const 9344
      i32.const 11600
      i32.const 88
      i32.const 35
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $4
     local.get $5
     call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
     local.tee $4
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 11968
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 11968
     call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
     local.tee $1
     i32.store $0 offset=32
     local.get $1
     i32.eqz
     if
      i32.const 9344
      i32.const 11600
      i32.const 89
      i32.const 35
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $5
     local.get $1
     call $~lib/assemblyscript-json/assembly/JSON/Obj#valueOf
     local.tee $1
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     local.get $2
     local.get $4
     call $~lib/string/String.__eq
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/params/SkillEasilyToGetParam
      local.tee $1
      i32.store $0
      local.get $1
      i32.const 0
      call $~lib/array/Array<i32>#__get
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $2
      i32.store $0
      local.get $4
      local.get $1
      i32.store $0 offset=8
      local.get $2
      local.get $1
      call $~lib/string/String.__eq
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       global.get $assembly/params/SkillEasilyToGetParam
       local.tee $1
       i32.store $0
       local.get $1
       i32.const 2
       call $~lib/array/Array<i32>#__get
      else
       global.get $~lib/memory/__stack_pointer
       global.get $assembly/params/SkillEasilyToGetParam
       local.tee $1
       i32.store $0
       local.get $1
       i32.const 1
       call $~lib/array/Array<i32>#__get
      end
     end
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     local.get $0
     local.get $1
     call $~lib/typedarray/Uint32Array#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|2
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/_Ticket#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 4
   i32.const 26
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 25
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 15
   local.get $0
   i32.const 14
   i32.rem_u
   local.get $0
   i32.const -1
   i32.eq
   local.get $0
   i32.const 15
   i32.eq
   i32.or
   select
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/_Ability#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 4
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 27
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.const 14
   i32.rem_u
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/SixteenAbilityCombo.toAbilityCombo (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $4
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $3
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $3
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.store $0 offset=4
   local.get $6
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 32
   i32.store $0 offset=8
   local.get $6
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $6
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $3
   i32.store $0
   loop $for-loop|0
    local.get $1
    i32.const 16
    i32.lt_s
    if
     local.get $0
     i32.const 15
     local.get $1
     i32.const 2
     i32.shl
     local.tee $4
     i32.shl
     i64.extend_i32_s
     i64.and
     local.get $4
     i64.extend_i32_s
     i64.shr_u
     local.tee $2
     i64.const 15
     i64.ne
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $2
      i32.wrap_i64
      call $assembly/Custom_Objects_2/_Ability#constructor
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=8
      local.get $3
      local.get $4
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/Ability#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  i32.load $0
  i32.const 10
  call $~lib/util/number/utoa32
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 10016
  i32.store $0 offset=4
  local.get $0
  i32.const 10016
  call $~lib/string/String.__concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 8
   i32.const 31
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 32
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $1
   i32.store $0 offset=4
   local.get $4
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i64.const 0
   i64.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 16
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 12016
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.store $0 offset=16
    local.get $1
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 10016
    i32.store $0 offset=4
    local.get $1
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $6
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=12
    local.set $3
    local.get $1
    i32.const 10016
    i32.store $0 offset=4
    block $__inlined_func$~lib/util/string/joinReferenceArray<assembly/Custom_Objects_2/Ability> (result i32)
     local.get $1
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $3
     i32.const 1
     i32.sub
     local.tee $5
     i32.const 0
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 9312
      br $__inlined_func$~lib/util/string/joinReferenceArray<assembly/Custom_Objects_2/Ability>
     end
     local.get $5
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.load $0
      local.tee $1
      i32.store $0
      local.get $1
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=4
       local.get $1
       call $assembly/Custom_Objects_2/Ability#toString
      else
       i32.const 9312
      end
      local.set $1
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $1
      br $__inlined_func$~lib/util/string/joinReferenceArray<assembly/Custom_Objects_2/Ability>
     end
     i32.const 9312
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 9312
     i32.store $0 offset=8
     local.get $3
     i32.const 10016
     i32.store $0 offset=4
     i32.const 10012
     i32.load $0
     i32.const 1
     i32.shr_u
     local.set $3
     loop $for-loop|0
      local.get $2
      local.get $5
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $6
       local.get $2
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $7
       i32.store $0
       local.get $7
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $8
        local.get $1
        i32.store $0 offset=4
        local.get $8
        local.get $7
        i32.store $0 offset=16
        local.get $7
        call $assembly/Custom_Objects_2/Ability#toString
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store $0 offset=12
        local.get $8
        local.get $1
        local.get $7
        call $~lib/string/String.__concat
        local.tee $1
        i32.store $0 offset=8
       end
       local.get $3
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        local.get $1
        i32.store $0 offset=4
        local.get $7
        i32.const 10016
        i32.store $0 offset=12
        local.get $7
        local.get $1
        i32.const 10016
        call $~lib/string/String.__concat
        local.tee $1
        i32.store $0 offset=8
       end
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $6
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $2
     i32.store $0
     local.get $2
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $1
      i32.store $0 offset=4
      local.get $3
      local.get $2
      i32.store $0 offset=16
      local.get $2
      call $assembly/Custom_Objects_2/Ability#toString
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=12
      local.get $3
      local.get $1
      local.get $2
      call $~lib/string/String.__concat
      local.tee $1
      i32.store $0 offset=8
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
    end
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=12
    i32.const 12016
    local.get $1
    call $~lib/string/String.__concat
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 0
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/bindings/dom/console.error
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i64.const -1
   i64.store $0
   i32.const 0
   local.set $1
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $2
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=4
     local.get $2
     i32.load $0
     i32.const 15
     i32.and
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     local.get $4
     local.get $2
     local.get $1
     i32.const 2
     i32.shl
     local.tee $2
     i32.shl
     i64.extend_i32_s
     local.get $4
     i64.load $0
     i32.const 15
     local.get $2
     i32.shl
     i32.const -1
     i32.xor
     i64.extend_i32_s
     i64.and
     i64.or
     i64.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/TicketSet#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 35
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store16 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/TicketSet.fromValue (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  call $assembly/Custom_Objects_2/TicketSet#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store16 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 8768
   i32.const 9264
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/TicketSet#contains (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0
  i32.const 1
  local.get $1
  i32.load $0
  i32.shl
  local.set $1
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load16_u $0
  i32.and
  i32.const 0
  i32.ne
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/TicketSet#toTickets (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $2
   i32.const 15
   i32.const 30
   i32.const 13968
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.const 34
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=4
   local.get $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=12
   local.get $2
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $5
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   local.get $6
   i32.store $0 offset=4
   local.get $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 32
   i32.store $0 offset=8
   local.get $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=12
   local.get $2
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $5
   i32.store $0 offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $3
     i32.store $0 offset=8
     local.get $2
     local.get $3
     local.get $1
     call $~lib/array/Array<u32>#__get
     call $assembly/Custom_Objects_2/_Ticket#constructor
     local.tee $2
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=16
     local.get $0
     local.get $2
     call $assembly/Custom_Objects_2/TicketSet#contains
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $5
      i32.store $0 offset=8
      local.get $4
      local.get $2
      i32.store $0 offset=16
      local.get $5
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/index/ValueToTicketSet (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  call $assembly/Custom_Objects_2/TicketSet.fromValue
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/Custom_Objects_2/TicketSet#toTickets
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint32Array#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 8768
   i32.const 9200
   i32.const 878
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/params/get_ability_weight (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  global.get $assembly/params/const_get_ability_weight
  local.tee $3
  i32.store $0
  local.get $2
  i32.const 2848
  i32.store $0 offset=4
  local.get $3
  i32.const 2848
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
  local.get $0
  i32.mul
  local.get $1
  i32.add
  call $~lib/typedarray/Uint32Array#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 8768
    i32.const 9264
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/params/max_brand_num_drink (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  global.get $assembly/params/const_max_brand_num_drink
  local.tee $3
  i32.store $0
  local.get $2
  i32.const 2848
  i32.store $0 offset=4
  local.get $3
  i32.const 2848
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
  local.get $0
  i32.mul
  local.get $1
  i32.add
  call $~lib/typedarray/Uint32Array#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/set/Set<u64>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 44
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 64
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/set/Set<u64>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $1
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $8
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $6
  i32.const 4
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  i32.load $0 offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.load $0 offset=16
  i32.const 4
  i32.shl
  i32.add
  local.set $7
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $4
   local.get $7
   i32.ne
   if
    local.get $4
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $2
     local.get $4
     i64.load $0
     local.tee $5
     i64.store $0
     local.get $2
     local.get $8
     local.get $1
     local.get $5
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.const 374761401
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.get $5
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $9
     local.get $9
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $9
     local.get $9
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $9
     local.get $9
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $9
     i32.load $0
     i32.store $0 offset=8
     local.get $9
     local.get $2
     i32.store $0
     local.get $2
     i32.const 16
     i32.add
     local.set $2
    end
    local.get $4
    i32.const 16
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $8
  i32.store $0 offset=12
  local.get $0
  local.get $8
  i32.store $0
  local.get $8
  if
   local.get $0
   local.get $8
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $0
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $6
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $0
  local.get $0
  i32.load $0 offset=20
  i32.store $0 offset=16
  local.get $1
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<u64>#add (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $1
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.const 374761401
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.get $1
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   i32.const 15
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   i32.const 13
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   i32.const 16
   i32.shr_u
   local.get $3
   i32.xor
   local.set $3
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $4
   local.get $2
   local.get $0
   i32.store $0
   local.get $4
   local.get $3
   local.get $0
   i32.load $0 offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $2
   block $__inlined_func$~lib/set/Set<u64>#find
    loop $while-continue|0
     local.get $2
     if
      local.get $2
      i32.load $0 offset=8
      local.tee $4
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       local.get $2
       i64.load $0
       i64.eq
      end
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/set/Set<u64>#find
      end
      local.get $4
      i32.const -2
      i32.and
      local.set $2
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    local.set $2
   end
   local.get $2
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=16
    local.set $4
    local.get $2
    local.get $0
    i32.store $0
    local.get $4
    local.get $0
    i32.load $0 offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=20
     local.set $4
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $4
     local.get $0
     i32.load $0 offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     call $~lib/set/Set<u64>#rehash
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=8
    local.set $4
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=16
    local.tee $5
    i32.const 1
    i32.add
    i32.store $0 offset=16
    local.get $4
    local.get $5
    i32.const 4
    i32.shl
    i32.add
    local.tee $4
    local.get $1
    i64.store $0
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=20
    i32.const 1
    i32.add
    i32.store $0 offset=20
    local.get $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    local.set $5
    local.get $2
    local.get $0
    i32.store $0
    local.get $4
    local.get $5
    local.get $3
    local.get $0
    i32.load $0 offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load $0
    i32.store $0 offset=8
    local.get $0
    local.get $4
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/InternalGear#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 12
  i32.const 45
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/InternalGear.fromExternalGear (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $1
   call $~lib/set/Set<u64>#constructor
   local.tee $9
   i32.store $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $assembly/Custom_Objects_2/ExternalGear#get:desired_abilities
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $assembly/Custom_Objects_2/ExternalGear#get:desired_abilities
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $1
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 14128
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $1
     local.get $6
     i32.store $0
     local.get $1
     local.get $6
     i32.load $0 offset=12
     local.tee $3
     i32.const 28
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $7
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.load $0 offset=4
     local.set $5
     i32.const 0
     local.set $1
     loop $for-loop|01
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $1
      local.get $3
      local.get $6
      i32.load $0 offset=12
      local.tee $8
      local.get $3
      local.get $8
      i32.lt_s
      select
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $6
       i32.store $0 offset=12
       local.get $1
       i32.const 2
       i32.shl
       local.tee $10
       local.get $6
       i32.load $0 offset=4
       i32.add
       i32.load $0
       local.set $11
       local.get $8
       local.get $6
       i32.store $0 offset=8
       i32.const 3
       global.set $~argumentsLength
       local.get $8
       local.get $11
       local.get $1
       local.get $6
       i32.const 14128
       i32.load $0
       call_indirect $0 (type $i32_i32_i32_=>_i32)
       local.tee $8
       i32.store $0 offset=16
       local.get $5
       local.get $10
       i32.add
       local.get $8
       i32.store $0
       local.get $8
       if
        local.get $7
        local.get $8
        i32.const 1
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|01
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $7
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=16
     local.get $7
     call $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=8
     local.get $9
     local.get $1
     i64.load $0
     call $~lib/set/Set<u64>#add
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   call $assembly/Custom_Objects_2/InternalGear#constructor
   local.tee $1
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.load $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.load $0 offset=4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $1
   local.get $9
   i32.store $0 offset=8
   local.get $9
   if
    local.get $1
    local.get $9
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u64>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 41
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 134217727
  i32.gt_u
  if
   i32.const 9088
   i32.const 9264
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 3
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<u64>#__set (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 8768
    i32.const 9264
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  i64.store $0
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u64>#set:length (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.const 3
  i32.const 0
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<u64>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $3
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  i32.load $0 offset=16
  local.tee $4
  call $~lib/array/Array<u64>#constructor
  local.tee $5
  i32.store $0 offset=4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    local.get $3
    local.get $2
    i32.const 4
    i32.shl
    i32.add
    local.tee $0
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $1
     local.get $0
     i64.load $0
     call $~lib/array/Array<u64>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $1
  call $~lib/array/Array<u64>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 47
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 64
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#find (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load $0 offset=12
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i64.load $0
     i64.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $1
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $5
  i32.const 4
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  i32.load $0 offset=8
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $8
  local.get $0
  i32.load $0 offset=16
  i32.const 4
  i32.shl
  i32.add
  local.set $4
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $4
   local.get $8
   i32.ne
   if
    local.get $8
    i32.load $0 offset=12
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $2
     local.get $8
     i64.load $0
     local.tee $6
     i64.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.load $0 offset=8
     local.tee $9
     i32.store $0 offset=12
     local.get $2
     local.get $9
     i32.store $0 offset=8
     local.get $2
     local.get $7
     local.get $1
     local.get $6
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.const 374761401
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.get $6
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $9
     local.get $9
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $9
     local.get $9
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $9
     local.get $9
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $9
     i32.load $0
     i32.store $0 offset=12
     local.get $9
     local.get $2
     i32.store $0
     local.get $2
     i32.const 16
     i32.add
     local.set $2
    end
    local.get $8
    i32.const 16
    i32.add
    local.set $8
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $7
  i32.store $0 offset=12
  local.get $0
  local.get $7
  i32.store $0
  local.get $7
  if
   local.get $0
   local.get $7
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $0
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $5
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $0
  local.get $0
  i32.load $0 offset=20
  i32.store $0 offset=16
  local.get $1
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#set (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $1
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.const 374761401
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $3
  i32.const 15
  i32.shr_u
  local.get $3
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $3
  i32.const 13
  i32.shr_u
  local.get $3
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $3
  i32.const 16
  i32.shr_u
  local.get $3
  i32.xor
  local.tee $4
  call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#find
  local.tee $3
  if
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $5
   local.get $3
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0 offset=12
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=20
    local.set $5
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $5
    local.get $0
    i32.load $0 offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=16
   local.tee $6
   i32.const 1
   i32.add
   i32.store $0 offset=16
   local.get $3
   local.get $6
   i32.const 4
   i32.shl
   i32.add
   local.tee $3
   local.get $1
   i64.store $0
   local.get $5
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=20
   i32.const 1
   i32.add
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $5
   local.get $2
   local.get $0
   i32.store $0
   local.get $3
   local.get $5
   local.get $4
   local.get $0
   i32.load $0 offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load $0
   i32.store $0 offset=12
   local.get $0
   local.get $3
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u64>#__get (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 8768
   i32.const 9264
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.set $2
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/set/Set<u32>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load $0 offset=4
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load $0
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/set/Set<u32>#add (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $2
   local.get $2
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $2
   local.get $2
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $6
   call $~lib/set/Set<u32>#find
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=16
    local.set $3
    local.get $2
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.load $0 offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=20
     local.set $3
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i64.const 0
     i64.store $0 offset=8
     local.get $2
     local.get $5
     i32.const 1
     i32.add
     local.tee $2
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 3
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.load $0 offset=8
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $4
     local.get $0
     i32.load $0 offset=16
     i32.const 3
     i32.shl
     i32.add
     local.set $8
     local.get $3
     local.set $2
     loop $while-continue|0
      local.get $4
      local.get $8
      i32.ne
      if
       local.get $4
       i32.load $0 offset=4
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $2
        local.get $4
        i32.load $0
        local.tee $10
        i32.store $0
        local.get $2
        local.get $9
        local.get $5
        local.get $10
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $10
        i32.const 15
        i32.shr_u
        local.get $10
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $10
        i32.const 13
        i32.shr_u
        local.get $10
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $10
        i32.const 16
        i32.shr_u
        local.get $10
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $10
        i32.load $0
        i32.store $0 offset=4
        local.get $10
        local.get $2
        i32.store $0
        local.get $2
        i32.const 8
        i32.add
        local.set $2
       end
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $9
     i32.store $0 offset=12
     local.get $0
     local.get $9
     i32.store $0
     local.get $9
     if
      local.get $0
      local.get $9
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $5
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $3
     i32.store $0 offset=12
     local.get $0
     local.get $3
     i32.store $0 offset=8
     local.get $3
     if
      local.get $0
      local.get $3
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $7
     i32.store $0 offset=12
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0 offset=12
     local.get $0
     local.get $0
     i32.load $0 offset=20
     i32.store $0 offset=16
     local.get $2
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=8
    local.set $3
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store $0 offset=16
    local.get $3
    local.get $4
    i32.const 3
    i32.shl
    i32.add
    local.tee $3
    local.get $1
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=20
    i32.const 1
    i32.add
    i32.store $0 offset=20
    local.get $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    local.set $1
    local.get $2
    local.get $0
    i32.store $0
    local.get $3
    local.get $1
    local.get $6
    local.get $0
    i32.load $0 offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load $0
    i32.store $0 offset=4
    local.get $0
    local.get $3
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load $0 offset=8
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load $0
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#has (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#find
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   local.get $3
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   local.get $3
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   local.get $3
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $7
   call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#find
   local.tee $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=16
    local.set $4
    local.get $3
    local.get $0
    i32.store $0
    local.get $4
    local.get $0
    i32.load $0 offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=20
     local.set $4
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $4
     local.get $0
     i32.load $0 offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i64.const 0
     i64.store $0 offset=8
     local.get $3
     local.get $6
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $8
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.load $0 offset=8
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $0
     i32.load $0 offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $9
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $9
      i32.ne
      if
       local.get $5
       i32.load $0 offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $5
        i32.load $0
        local.tee $11
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.load $0 offset=4
        local.tee $12
        i32.store $0 offset=12
        local.get $3
        local.get $12
        i32.store $0 offset=4
        local.get $3
        local.get $10
        local.get $6
        local.get $11
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $11
        i32.const 15
        i32.shr_u
        local.get $11
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $11
        i32.const 13
        i32.shr_u
        local.get $11
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $11
        i32.const 16
        i32.shr_u
        local.get $11
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load $0
        i32.store $0 offset=8
        local.get $11
        local.get $3
        i32.store $0
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $5
       i32.const 12
       i32.add
       local.set $5
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $10
     i32.store $0 offset=12
     local.get $0
     local.get $10
     i32.store $0
     local.get $10
     if
      local.get $0
      local.get $10
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $6
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $4
     i32.store $0 offset=12
     local.get $0
     local.get $4
     i32.store $0 offset=8
     local.get $4
     if
      local.get $0
      local.get $4
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $8
     i32.store $0 offset=12
     local.get $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0 offset=12
     local.get $0
     local.get $0
     i32.load $0 offset=20
     i32.store $0 offset=16
     local.get $3
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.load $0 offset=8
    local.tee $4
    i32.store $0 offset=8
    local.get $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=16
    local.tee $5
    i32.const 1
    i32.add
    i32.store $0 offset=16
    local.get $4
    local.get $5
    i32.const 12
    i32.mul
    i32.add
    local.tee $4
    local.get $1
    i32.store $0
    local.get $3
    local.get $2
    i32.store $0 offset=4
    local.get $4
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=20
    i32.const 1
    i32.add
    i32.store $0 offset=20
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    local.set $2
    local.get $1
    local.get $0
    i32.store $0
    local.get $4
    local.get $2
    local.get $7
    local.get $0
    i32.load $0 offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load $0
    i32.store $0 offset=8
    local.get $0
    local.get $4
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#find
  local.tee $0
  i32.eqz
  if
   i32.const 11728
   i32.const 11792
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/_TicketSet#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 34
    i32.const 14336
    call $~lib/rt/__newArray
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   i32.const 2
   i32.const 52
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   local.get $3
   call $assembly/Custom_Objects_2/TicketSet#constructor
   local.tee $3
   i32.store $0
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0 offset=4
     local.get $4
     local.get $0
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $4
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     i32.const 1
     local.get $4
     i32.load $0
     i32.const 15
     i32.and
     i32.shl
     local.get $2
     i32.or
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store16 $0
   local.get $0
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_single_gear/check_single_gear_possible_next_abilities (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.const 40
   memory.fill $0
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $3
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   call $assembly/Custom_Objects_2/InternalGear#get:desired_abilities
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store $0
   local.get $6
   i32.const 0
   i32.store $0 offset=8
   local.get $6
   i32.const 24
   i32.const 50
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $6
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $6
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 3
   i32.store $0 offset=4
   local.get $7
   local.get $6
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $6
   local.get $7
   i32.store $0 offset=8
   local.get $7
   if
    local.get $6
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 4
   i32.store $0 offset=12
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=16
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=20
   local.get $7
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $6
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   i64.const 0
   i64.store $0
   local.get $7
   i32.const 0
   i32.store $0 offset=8
   local.get $7
   i32.const 24
   i32.const 51
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.store $0
   local.get $8
   if
    local.get $7
    local.get $8
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 3
   i32.store $0 offset=4
   local.get $8
   local.get $7
   i32.store $0 offset=4
   i32.const 32
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.store $0 offset=8
   local.get $8
   if
    local.get $7
    local.get $8
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 4
   i32.store $0 offset=12
   local.get $8
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 0
   i32.store $0 offset=16
   local.get $8
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 0
   i32.store $0 offset=20
   local.get $8
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $7
   i32.store $0 offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/set/Set<u64>#values
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $5
     local.get $8
     local.get $1
     call $~lib/array/Array<u64>#__get
     call $assembly/Custom_Objects_2/SixteenAbilityCombo.toAbilityCombo
     local.tee $5
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.const 0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $8
      local.get $7
      i32.store $0
      local.get $8
      local.get $5
      i32.store $0 offset=24
      local.get $5
      i32.const 0
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=16
      local.get $7
      local.get $5
      i32.load $0
      call $~lib/set/Set<u32>#add
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 15
   i32.const 30
   i32.const 14256
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=28
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $4
     local.get $1
     call $assembly/index/get_ability
     local.tee $5
     i32.store $0 offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     i32.const 0
     call $~lib/array/Array<u32>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     i32.const 1
     call $~lib/array/Array<u32>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     i32.const 0
     i32.store $0
     local.get $9
     local.get $7
     i32.store $0
     local.get $7
     local.get $8
     local.get $8
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $9
     i32.const 15
     i32.shr_u
     local.get $9
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $9
     i32.const 13
     i32.shr_u
     local.get $9
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $9
     i32.const 16
     i32.shr_u
     local.get $9
     i32.xor
     call $~lib/set/Set<u32>#find
     i32.const 0
     i32.ne
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $9
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $8
      call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#has
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $9
       local.get $6
       i32.store $0
       local.get $9
       i32.const 12
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 15496
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $9
       i64.const 0
       i64.store $0
       local.get $9
       i32.const 0
       i32.store $0 offset=8
       local.get $9
       i32.const 24
       i32.const 49
       call $~lib/rt/itcms/__new
       local.tee $9
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=4
       i32.const 16
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.set $10
       global.get $~lib/memory/__stack_pointer
       local.get $10
       i32.store $0 offset=8
       local.get $9
       local.get $10
       i32.store $0
       local.get $10
       if
        local.get $9
        local.get $10
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $10
       local.get $9
       i32.store $0 offset=4
       local.get $9
       i32.const 3
       i32.store $0 offset=4
       local.get $10
       local.get $9
       i32.store $0 offset=4
       i32.const 48
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.set $10
       global.get $~lib/memory/__stack_pointer
       local.get $10
       i32.store $0 offset=8
       local.get $9
       local.get $10
       i32.store $0 offset=8
       local.get $10
       if
        local.get $9
        local.get $10
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $10
       local.get $9
       i32.store $0 offset=4
       local.get $9
       i32.const 4
       i32.store $0 offset=12
       local.get $10
       local.get $9
       i32.store $0 offset=4
       local.get $9
       i32.const 0
       i32.store $0 offset=16
       local.get $10
       local.get $9
       i32.store $0 offset=4
       local.get $9
       i32.const 0
       i32.store $0 offset=20
       local.get $10
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=24
       local.get $6
       local.get $8
       local.get $9
       call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#set
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $9
      local.get $6
      i32.store $0
      local.get $9
      local.get $6
      local.get $8
      call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#get
      local.tee $8
      i32.store $0 offset=36
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0
      local.get $8
      local.get $5
      call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#has
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0
       i32.const 0
       global.set $~argumentsLength
       call $assembly/Custom_Objects_2/_TicketSet#constructor@varargs
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=24
       local.get $8
       local.get $5
       local.get $9
       call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#set
      end
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0 offset=24
      local.get $8
      local.get $5
      call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $1
      call $assembly/Custom_Objects_2/_Ticket#constructor
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 15496
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $8
      i64.const 0
      i64.store $0
      local.get $8
      local.get $1
      i32.store $0
      i32.const 1
      local.get $1
      i32.load $0
      i32.const 15
      i32.and
      i32.shl
      local.set $1
      local.get $8
      local.get $5
      i32.store $0
      local.get $8
      local.get $5
      i32.store $0 offset=4
      local.get $5
      local.get $1
      local.get $5
      i32.load16_u $0
      i32.or
      i32.store16 $0
      local.get $8
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $3
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 30
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $4
   i32.const 268435455
   i32.gt_u
   if
    i32.const 9088
    i32.const 9264
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $4
   local.get $4
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $1
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $1
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=4
   local.get $7
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $7
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $4
   i32.store $0 offset=12
   local.get $7
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $4
    local.get $5
    i32.gt_s
    if
     local.get $3
     local.get $5
     i32.const 12
     i32.mul
     i32.add
     local.tee $2
     i32.load $0 offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      local.get $0
      local.get $2
      i32.load $0
      call $~lib/array/Array<u32>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $3
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 53
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 268435455
   i32.gt_u
   if
    i32.const 9088
    i32.const 9264
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $3
   local.get $3
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $1
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     local.get $4
     local.get $2
     i32.const 12
     i32.mul
     i32.add
     local.tee $5
     i32.load $0 offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $1
      i32.store $0
      local.get $6
      local.get $5
      i32.load $0 offset=4
      local.tee $5
      i32.store $0 offset=8
      local.get $1
      local.get $0
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $3
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  i32.load $0 offset=16
  local.tee $4
  call $~lib/array/Array<u64>#constructor
  local.tee $5
  i32.store $0 offset=4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    local.get $3
    local.get $2
    i32.const 4
    i32.shl
    i32.add
    local.tee $0
    i32.load $0 offset=12
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $1
     local.get $0
     i64.load $0
     call $~lib/array/Array<u64>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $1
  call $~lib/array/Array<u64>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#get (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $1
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.const 374761401
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  i32.const 15
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  i32.const 13
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  i32.const 16
  i32.shr_u
  local.get $0
  i32.xor
  call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#find
  local.tee $0
  i32.eqz
  if
   i32.const 11728
   i32.const 11792
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=8
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#has (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $1
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.const 374761401
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const -1028477379
  i32.mul
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  i32.const 15
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  i32.const 13
  i32.shr_u
  local.get $0
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  i32.const 16
  i32.shr_u
  local.get $0
  i32.xor
  call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#find
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $4
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=12
  local.tee $5
  local.get $4
  i32.add
  local.tee $2
  i32.const 268435455
  i32.gt_u
  if
   i32.const 9088
   i32.const 9264
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 38
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.load $0 offset=4
  local.set $3
  local.get $4
  i32.const 2
  i32.shl
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $7
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   local.get $6
   i32.lt_u
   if
    local.get $0
    local.get $3
    i32.add
    local.get $0
    local.get $7
    i32.add
    i32.load $0
    local.tee $4
    i32.store $0
    local.get $4
    if
     local.get $2
     local.get $4
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $3
  local.get $6
  i32.add
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $3
  local.get $5
  i32.const 2
  i32.shl
  local.set $4
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   local.get $4
   i32.lt_u
   if
    local.get $0
    local.get $1
    i32.add
    local.get $1
    local.get $3
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $5
    if
     local.get $2
     local.get $5
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/process_single_gear/purify_single_gear_index (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i64)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 96
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 96
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   drop
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $assembly/Custom_Objects_2/InternalGear#get:desired_abilities
   local.tee $4
   i32.store $0 offset=4
   block $__inlined_func$~lib/array/Array<u64>#every (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $~lib/set/Set<u64>#values
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 14160
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i64.const 0
    i64.store $0
    local.get $6
    i32.const 0
    i32.store $0 offset=8
    local.get $6
    local.get $2
    i32.store $0
    local.get $2
    i32.load $0 offset=12
    local.set $6
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $1
     local.get $6
     local.get $2
     i32.load $0 offset=12
     local.tee $7
     local.get $6
     local.get $7
     i32.lt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $2
      i32.store $0 offset=8
      local.get $2
      i32.load $0 offset=4
      local.get $1
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.set $3
      local.get $7
      local.get $2
      i32.store $0 offset=4
      i32.const 3
      global.set $~argumentsLength
      local.get $3
      local.get $1
      local.get $2
      i32.const 14160
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$~lib/array/Array<u64>#every
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   if
    i32.const 0
    i32.const 28
    i32.const 14192
    call $~lib/rt/__newArray
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    local.get $0
    call $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i64.load $0
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 38
    i32.const 14224
    call $~lib/rt/__newArray
    local.tee $0
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#constructor
    local.tee $1
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 1
    i32.const 39
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $2
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0 offset=4
    i32.store $0 offset=28
    local.get $2
    i32.const 0
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    local.get $1
    local.get $3
    local.get $2
    call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#set
    global.get $~lib/memory/__stack_pointer
    i32.const 96
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/process_single_gear/check_single_gear_possible_next_abilities
   local.tee $9
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#constructor
   local.tee $11
   i32.store $0 offset=36
   loop $for-loop|02
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
    local.get $5
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#keys
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $5
     call $~lib/array/Array<u32>#__get
     global.set $assembly/process_single_gear/next_ability
     global.get $~lib/memory/__stack_pointer
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#values
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $0
     local.get $1
     local.get $5
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $12
     i32.store $0 offset=40
     i32.const 0
     local.set $6
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store $0
      local.get $12
      call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
      local.get $6
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=8
       local.get $12
       call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#keys
       local.set $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       local.get $6
       call $~lib/array/Array<u32>#__get
       local.set $7
       global.get $~lib/memory/__stack_pointer
       call $~lib/set/Set<u64>#constructor
       local.tee $10
       i32.store $0 offset=44
       i32.const 0
       local.set $0
       loop $for-loop|2
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $4
        call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
        local.get $0
        i32.gt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $4
         i32.store $0 offset=8
         local.get $4
         call $~lib/set/Set<u64>#values
         local.set $2
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0
         local.get $1
         local.get $2
         local.get $0
         call $~lib/array/Array<u64>#__get
         call $assembly/Custom_Objects_2/SixteenAbilityCombo.toAbilityCombo
         local.tee $13
         i32.store $0 offset=48
         global.get $~lib/memory/__stack_pointer
         local.get $13
         i32.store $0
         local.get $13
         call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
         i32.const 0
         i32.gt_s
         if (result i32)
          global.get $assembly/process_single_gear/next_ability
          local.set $1
          global.get $~lib/memory/__stack_pointer
          local.get $13
          i32.store $0 offset=8
          local.get $13
          i32.const 0
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
          local.set $2
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0
          local.get $1
          local.get $2
          i32.load $0
          i32.eq
         else
          i32.const 0
         end
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $14
          local.get $10
          i32.store $0
          local.get $14
          local.get $13
          i32.store $0 offset=52
          i32.const 1
          global.set $~argumentsLength
          i32.const 0
          local.set $2
          i32.const 1
          local.set $1
          local.get $14
          i32.const 4
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 15496
          i32.lt_s
          br_if $folding-inner1
          global.get $~lib/memory/__stack_pointer
          i32.const 0
          i32.store $0
          block $2of2
           block $1of2
            block $0of2
             block $outOfRange
              global.get $~argumentsLength
              br_table $0of2 $1of2 $2of2 $outOfRange
             end
             unreachable
            end
            i32.const 0
            local.set $1
           end
           i32.const 2147483647
           local.set $2
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $14
          local.get $13
          i32.store $0
          local.get $14
          i32.const 8
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 15496
          i32.lt_s
          br_if $folding-inner1
          global.get $~lib/memory/__stack_pointer
          local.tee $14
          i64.const 0
          i64.store $0
          local.get $14
          local.get $13
          i32.store $0
          local.get $1
          local.get $13
          i32.load $0 offset=12
          local.tee $15
          local.get $1
          local.get $15
          i32.lt_s
          select
          local.set $1
          local.get $2
          i32.const 0
          i32.lt_s
          if (result i32)
           local.get $2
           local.get $15
           i32.add
           local.tee $2
           i32.const 0
           local.get $2
           i32.const 0
           i32.gt_s
           select
          else
           local.get $2
           local.get $15
           local.get $2
           local.get $15
           i32.lt_s
           select
          end
          local.set $15
          i32.const 0
          local.set $2
          local.get $14
          local.get $15
          local.get $1
          i32.sub
          local.tee $14
          i32.const 0
          local.get $14
          i32.const 0
          i32.gt_s
          select
          local.tee $14
          i32.const 28
          i32.const 0
          call $~lib/rt/__newArray
          local.tee $15
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          local.tee $16
          local.get $15
          i32.store $0
          local.get $15
          i32.load $0 offset=4
          local.set $17
          local.get $16
          local.get $13
          i32.store $0
          local.get $13
          i32.load $0 offset=4
          local.get $1
          i32.const 2
          i32.shl
          i32.add
          local.set $1
          local.get $14
          i32.const 2
          i32.shl
          local.set $13
          loop $while-continue|0
           local.get $2
           local.get $13
           i32.lt_u
           if
            local.get $2
            local.get $17
            i32.add
            local.get $1
            local.get $2
            i32.add
            i32.load $0
            local.tee $14
            i32.store $0
            local.get $14
            if
             local.get $15
             local.get $14
             i32.const 1
             call $byn-split-outlined-A$~lib/rt/itcms/__link
            end
            local.get $2
            i32.const 4
            i32.add
            local.set $2
            br $while-continue|0
           end
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.add
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          local.get $15
          i32.store $0 offset=52
          local.get $15
          call $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor
          local.set $1
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=8
          local.get $10
          local.get $1
          i64.load $0
          call $~lib/set/Set<u64>#add
         end
         local.get $0
         i32.const 1
         i32.add
         local.set $0
         br $for-loop|2
        end
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       call $assembly/Custom_Objects_2/InternalGear#constructor
       local.tee $1
       i32.store $0 offset=56
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $1
       local.get $7
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $1
       local.get $8
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $10
       i32.store $0 offset=12
       local.get $1
       local.get $10
       i32.store $0 offset=8
       local.get $10
       if
        local.get $1
        local.get $10
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $0
       local.get $1
       call $assembly/process_single_gear/purify_single_gear_index
       local.tee $13
       i32.store $0 offset=60
       i32.const 0
       local.set $2
       loop $for-loop|3
        global.get $~lib/memory/__stack_pointer
        local.get $13
        i32.store $0
        local.get $13
        call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get:size
        local.get $2
        i32.gt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.get $13
         i32.store $0 offset=8
         local.get $13
         call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#keys
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         local.get $2
         call $~lib/array/Array<u64>#__get
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.set $14
         global.get $~lib/memory/__stack_pointer
         i32.const 1
         i32.const 28
         i32.const 0
         call $~lib/rt/__newArray
         local.tee $0
         i32.store $0 offset=64
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0 offset=4
         i32.store $0 offset=68
         local.get $0
         i32.const 0
         global.get $assembly/process_single_gear/next_ability
         call $assembly/Custom_Objects_2/_Ability#constructor
         call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $18
         call $assembly/Custom_Objects_2/SixteenAbilityCombo.toAbilityCombo
         local.set $15
         global.get $~lib/memory/__stack_pointer
         local.get $15
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 15496
         i32.lt_s
         br_if $folding-inner1
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i64.const 0
         i64.store $0
         local.get $1
         local.get $0
         i32.store $0
         local.get $0
         i32.load $0 offset=12
         local.set $10
         local.get $1
         local.get $15
         i32.store $0
         local.get $15
         i32.load $0 offset=12
         local.tee $16
         local.get $10
         i32.add
         local.tee $1
         i32.const 268435455
         i32.gt_u
         if
          i32.const 9088
          i32.const 9264
          i32.const 224
          i32.const 60
          call $~lib/builtins/abort
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.const 28
         i32.const 0
         call $~lib/rt/__newArray
         local.tee $17
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $17
         i32.store $0
         local.get $17
         i32.load $0 offset=4
         local.set $19
         local.get $10
         i32.const 2
         i32.shl
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         i32.load $0 offset=4
         local.set $20
         i32.const 0
         local.set $0
         loop $for-loop|01
          local.get $0
          local.get $1
          i32.lt_u
          if
           local.get $0
           local.get $19
           i32.add
           local.get $0
           local.get $20
           i32.add
           i32.load $0
           local.tee $10
           i32.store $0
           local.get $10
           if
            local.get $17
            local.get $10
            i32.const 1
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           local.get $0
           i32.const 4
           i32.add
           local.set $0
           br $for-loop|01
          end
         end
         local.get $1
         local.get $19
         i32.add
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $15
         i32.store $0
         local.get $15
         i32.load $0 offset=4
         local.set $10
         local.get $16
         i32.const 2
         i32.shl
         local.set $15
         i32.const 0
         local.set $0
         loop $for-loop|12
          local.get $0
          local.get $15
          i32.lt_u
          if
           local.get $0
           local.get $1
           i32.add
           local.get $0
           local.get $10
           i32.add
           i32.load $0
           local.tee $16
           i32.store $0
           local.get $16
           if
            local.get $17
            local.get $16
            i32.const 1
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           local.get $0
           i32.const 4
           i32.add
           local.set $0
           br $for-loop|12
          end
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $14
         local.get $17
         i32.store $0 offset=72
         global.get $~lib/memory/__stack_pointer
         local.get $17
         i32.store $0 offset=12
         local.get $17
         call $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         i64.load $0
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $13
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $13
         local.get $18
         call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#get
         local.tee $0
         i32.store $0 offset=76
         i32.const 0
         local.set $1
         loop $for-loop|4
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
          local.get $1
          i32.gt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $10
           local.get $0
           i32.store $0
           local.get $10
           local.get $0
           local.get $1
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
           local.tee $10
           i32.store $0 offset=80
           global.get $~lib/memory/__stack_pointer
           local.get $11
           i32.store $0
           local.get $11
           local.get $3
           call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#has
           i32.eqz
           if
            global.get $~lib/memory/__stack_pointer
            local.get $11
            i32.store $0
            i32.const 0
            i32.const 39
            i32.const 14368
            call $~lib/rt/__newArray
            local.set $14
            global.get $~lib/memory/__stack_pointer
            local.get $14
            i32.store $0 offset=12
            local.get $11
            local.get $3
            local.get $14
            call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#set
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $14
           i32.const 1
           i32.const 38
           i32.const 0
           call $~lib/rt/__newArray
           local.tee $15
           i32.store $0 offset=84
           global.get $~lib/memory/__stack_pointer
           local.get $15
           i32.load $0 offset=4
           i32.store $0 offset=88
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.store $0 offset=52
           local.get $9
           global.get $assembly/process_single_gear/next_ability
           call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#get
           local.set $16
           global.get $~lib/memory/__stack_pointer
           local.get $16
           i32.store $0 offset=12
           local.get $15
           i32.const 0
           local.get $16
           local.get $7
           call $~lib/map/Map<u32,~lib/map/Map<u32,assembly/Custom_Objects_2/TicketSet>>#get
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
           global.get $~lib/memory/__stack_pointer
           local.get $15
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0 offset=8
           local.get $14
           local.get $15
           local.get $10
           call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#concat
           local.tee $10
           i32.store $0 offset=92
           global.get $~lib/memory/__stack_pointer
           local.get $11
           i32.store $0 offset=12
           local.get $11
           local.get $3
           call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#get
           local.set $14
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0 offset=8
           local.get $14
           local.get $10
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
           local.get $1
           i32.const 1
           i32.add
           local.set $1
           br $for-loop|4
          end
         end
         local.get $2
         i32.const 1
         i32.add
         local.set $2
         br $for-loop|3
        end
       end
       local.get $6
       i32.const 1
       i32.add
       local.set $6
       br $for-loop|1
      end
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|02
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 96
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $3
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 42
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 268435455
   i32.gt_u
   if
    i32.const 9088
    i32.const 9264
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $3
   local.get $3
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $1
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     local.get $4
     local.get $2
     i32.const 4
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=12
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $1
      i32.store $0
      local.get $6
      local.get $5
      i32.load $0 offset=8
      local.tee $5
      i32.store $0 offset=8
      local.get $1
      local.get $0
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_single_gear/purify_single_gear (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $2
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $4
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $assembly/Custom_Objects_2/InternalGear.fromExternalGear
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   call $assembly/Custom_Objects_2/InternalGear#get:desired_abilities
   local.tee $5
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store $0
   local.get $6
   i64.const 0
   i64.store $0 offset=8
   local.get $6
   i32.const 16
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=4
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=8
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $7
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $6
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $6
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $7
   i32.store $0 offset=4
   local.get $8
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 32
   i32.store $0 offset=8
   local.get $8
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $8
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $6
   i32.store $0 offset=12
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     call $assembly/Custom_Objects_2/InternalGear#constructor
     local.tee $7
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $7
     local.get $5
     i32.store $0 offset=8
     local.get $5
     if
      local.get $7
      local.get $5
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     local.get $7
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $7
     i32.store $0
     local.get $0
     local.get $7
     call $assembly/process_single_gear/purify_single_gear_index
     local.tee $7
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $8
     i64.const 0
     i64.store $0
     local.get $8
     i64.const 0
     i64.store $0 offset=8
     local.get $8
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     i32.const 8
     i32.const 40
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     local.get $0
     i32.store $0 offset=4
     local.get $9
     local.get $0
     call $~lib/object/Object#constructor
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $8
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=12
     local.get $7
     call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $0
     local.get $8
     i32.store $0
     local.get $8
     if
      local.get $0
      local.get $8
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $8
     local.get $0
     i32.store $0 offset=4
     local.get $8
     local.get $7
     i32.store $0 offset=12
     local.get $7
     call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#values
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $0
     local.get $7
     i32.store $0 offset=4
     local.get $7
     if
      local.get $0
      local.get $7
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $6
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     local.get $2
     local.get $2
     i32.const 13
     i32.shl
     i32.xor
     local.tee $0
     i32.const 17
     i32.shr_u
     local.get $0
     i32.xor
     local.tee $0
     i32.const 5
     i32.shl
     local.get $0
     i32.xor
     local.set $2
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_all_gear_at_once/mapped_gear_solution_to_ticketsetcombo_array~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  i32.const 15
  call $assembly/Custom_Objects_2/_Ticket#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/Custom_Objects_2/TicketSet#contains
  i32.eqz
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#filter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $3
  i32.const 0
  i32.const 38
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $0
    i32.store $0 offset=4
    local.get $6
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $4
    i32.store $0 offset=8
    local.get $6
    local.get $4
    i32.store $0 offset=4
    local.get $6
    local.get $0
    i32.store $0 offset=12
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $5
     i32.store $0 offset=4
     local.get $6
     local.get $4
     i32.store $0 offset=16
     local.get $5
     local.get $4
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/process_all_gear_at_once/ticket_set_combo_is_empty (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.eqz
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/process_all_gear_at_once/all_gear_is_already_purified~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/process_all_gear_at_once/ticket_set_combo_is_empty
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/process_all_gear_at_once/all_gear_is_already_purified~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   block $__inlined_func$~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>#some (result i32)
    local.get $2
    local.get $0
    i32.store $0
    local.get $0
    local.set $1
    local.get $2
    i32.const 14592
    i32.store $0 offset=4
    local.get $2
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    i32.const 0
    local.set $2
    local.get $0
    local.get $1
    i32.store $0
    local.get $1
    i32.load $0 offset=12
    local.set $3
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $2
     local.get $3
     local.get $1
     i32.load $0 offset=12
     local.tee $0
     local.get $0
     local.get $3
     i32.gt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $1
      i32.store $0 offset=4
      local.get $0
      local.get $1
      i32.load $0 offset=4
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $4
      i32.store $0
      local.get $0
      local.get $1
      i32.store $0 offset=4
      i32.const 3
      global.set $~argumentsLength
      local.get $4
      local.get $2
      local.get $1
      i32.const 14592
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       br $__inlined_func$~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>#some
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_all_gear_at_once/all_gear_is_already_purified (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   block $__inlined_func$~lib/array/Array<~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#every (result i32)
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    i32.const 14624
    i32.store $0 offset=4
    local.get $2
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=12
    local.set $3
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $1
     local.get $3
     local.get $0
     i32.load $0 offset=12
     local.tee $2
     local.get $2
     local.get $3
     i32.gt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0 offset=4
      local.get $2
      local.get $0
      i32.load $0 offset=4
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $4
      i32.store $0
      local.get $2
      local.get $0
      i32.store $0 offset=4
      i32.const 3
      global.set $~argumentsLength
      local.get $4
      local.get $1
      local.get $0
      i32.const 14624
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$~lib/array/Array<~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#every
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#slice@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     i32.const 0
     local.set $1
    end
    i32.const 2147483647
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $3
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $3
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $3
    local.get $1
    local.get $3
    i32.lt_s
    select
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   local.get $2
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $2
    local.get $3
    i32.add
    local.tee $2
    i32.const 0
    local.get $2
    i32.const 0
    i32.gt_s
    select
   else
    local.get $2
    local.get $3
    local.get $2
    local.get $3
    i32.lt_s
    select
   end
   local.set $3
   i32.const 0
   local.set $2
   local.get $1
   local.get $3
   local.get $4
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.tee $1
   i32.const 38
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0 offset=4
   local.set $6
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.get $4
   i32.const 2
   i32.shl
   i32.add
   local.set $0
   local.get $1
   i32.const 2
   i32.shl
   local.set $1
   loop $while-continue|0
    local.get $1
    local.get $2
    i32.gt_u
    if
     local.get $2
     local.get $6
     i32.add
     local.get $0
     local.get $2
     i32.add
     i32.load $0
     local.tee $4
     i32.store $0
     local.get $4
     if
      local.get $3
      local.get $4
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 4
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_all_gear_at_once/apply_ticket_to_all_ticketsetcombos~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   global.get $assembly/process_all_gear_at_once/global_ticket
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 0
   i32.gt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    i32.const 0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/process_all_gear_at_once/global_ticket
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $2
    call $assembly/Custom_Objects_2/TicketSet#contains
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    global.get $assembly/process_all_gear_at_once/global_remaining_depth_limit
    i32.le_s
    if
     i32.const 1
     global.set $assembly/process_all_gear_at_once/global_ticket_was_used
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 1
    global.set $~argumentsLength
    local.get $0
    i32.const 1
    call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#slice@varargs
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_all_gear_at_once/apply_ticket_to_all_gear~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   global.get $assembly/process_all_gear_at_once/global_ticket
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   block $__inlined_func$assembly/process_all_gear_at_once/apply_ticket_to_all_ticketsetcombos (result i32)
    local.get $0
    local.set $2
    local.get $1
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     local.get $2
     i32.store $0
     local.get $0
     i32.const 14720
     i32.store $0 offset=4
     local.get $0
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     i64.const 0
     i64.store $0 offset=8
     local.get $0
     local.get $2
     i32.store $0
     local.get $0
     local.get $2
     i32.load $0 offset=12
     local.tee $4
     i32.const 39
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0 offset=4
     local.set $5
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $3
      local.get $4
      local.get $2
      i32.load $0 offset=12
      local.tee $1
      local.get $1
      local.get $4
      i32.gt_s
      select
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $2
       i32.store $0 offset=8
       local.get $1
       local.get $3
       i32.const 2
       i32.shl
       local.tee $6
       local.get $2
       i32.load $0 offset=4
       i32.add
       i32.load $0
       local.tee $7
       i32.store $0
       local.get $1
       local.get $2
       i32.store $0 offset=8
       i32.const 3
       global.set $~argumentsLength
       local.get $1
       local.get $7
       local.get $3
       local.get $2
       i32.const 14720
       i32.load $0
       call_indirect $0 (type $i32_i32_i32_=>_i32)
       local.tee $1
       i32.store $0 offset=12
       local.get $5
       local.get $6
       i32.add
       local.get $1
       i32.store $0
       local.get $1
       if
        local.get $0
        local.get $1
        i32.const 1
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/process_all_gear_at_once/apply_ticket_to_all_ticketsetcombos
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_all_gear_at_once/prepend_ticket_to_all_combos~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   local.set $1
   local.get $2
   global.get $assembly/process_all_gear_at_once/global_ticket_prepend
   local.tee $0
   i32.store $0 offset=4
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   local.get $1
   i32.load $0 offset=12
   i32.const 1
   i32.add
   local.tee $2
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.tee $3
   i32.const 4
   i32.add
   local.get $3
   local.get $2
   i32.const 1
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=12
   local.get $0
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/Ticket>>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $4
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=12
  local.tee $5
  local.get $4
  i32.add
  local.tee $2
  i32.const 268435455
  i32.gt_u
  if
   i32.const 9088
   i32.const 9264
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 63
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.load $0 offset=4
  local.set $3
  local.get $4
  i32.const 2
  i32.shl
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $7
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   local.get $6
   i32.lt_u
   if
    local.get $0
    local.get $3
    i32.add
    local.get $0
    local.get $7
    i32.add
    i32.load $0
    local.tee $4
    i32.store $0
    local.get $4
    if
     local.get $2
     local.get $4
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $3
  local.get $6
  i32.add
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $3
  local.get $5
  i32.const 2
  i32.shl
  local.set $4
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   local.get $4
   i32.lt_u
   if
    local.get $0
    local.get $1
    i32.add
    local.get $1
    local.get $3
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $5
    if
     local.get $2
     local.get $5
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/process_all_gear_at_once/purify_all_gear_DFS (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   block $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 40
    memory.fill $0
    local.get $1
    i32.const 0
    i32.lt_s
    if
     i32.const 0
     i32.const 63
     i32.const 14560
     call $~lib/rt/__newArray
     local.set $0
     br $folding-inner1
    end
    local.get $2
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/process_all_gear_at_once/all_gear_is_already_purified
    end
    if (result i32)
     i32.const 1
    else
     local.get $1
     i32.const 1
     local.get $2
     select
     if (result i32)
      i32.const 0
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $assembly/process_all_gear_at_once/all_gear_is_already_purified
     end
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 34
     i32.const 14656
     call $~lib/rt/__newArray
     local.tee $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     i32.const 63
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0 offset=4
     i32.store $0 offset=12
     local.get $0
     i32.const 0
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $0
    i32.store $0 offset=16
    block $__inlined_func$assembly/process_all_gear_at_once/find_needed_tickets (result i32)
     local.get $6
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     block $folding-inner00
      global.get $~lib/memory/__stack_pointer
      i32.const 15496
      i32.lt_s
      br_if $folding-inner00
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      i32.const 0
      i32.const 24
      memory.fill $0
      i32.const 0
      global.set $~argumentsLength
      local.get $4
      call $assembly/Custom_Objects_2/_TicketSet#constructor@varargs
      local.tee $7
      i32.store $0
      loop $for-loop|0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       local.get $0
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
       local.get $3
       i32.gt_s
       if
        i32.const 0
        local.set $4
        loop $for-loop|1
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=8
         local.get $0
         local.get $3
         call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
         local.set $8
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.store $0 offset=4
         local.get $8
         call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
         local.get $4
         i32.gt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $8
          local.get $0
          i32.store $0 offset=4
          local.get $8
          local.get $0
          local.get $3
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
          local.tee $8
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $8
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $8
          local.get $4
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
          local.tee $8
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          local.get $8
          i32.store $0 offset=4
          local.get $8
          call $assembly/process_all_gear_at_once/ticket_set_combo_is_empty
          i32.eqz
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $9
           local.get $8
           i32.store $0 offset=4
           local.get $9
           local.get $8
           i32.const 0
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
           local.tee $8
           i32.store $0 offset=20
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $8
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 15496
           i32.lt_s
           br_if $folding-inner00
           global.get $~lib/memory/__stack_pointer
           local.tee $9
           i64.const 0
           i64.store $0
           local.get $9
           local.get $7
           i32.store $0
           local.get $9
           local.get $7
           i32.store $0 offset=4
           local.get $7
           i32.load16_u $0
           local.set $10
           local.get $9
           local.get $8
           i32.store $0 offset=4
           local.get $7
           local.get $10
           local.get $8
           i32.load16_u $0
           i32.or
           i32.store16 $0
           local.get $9
           i32.const 8
           i32.add
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store $0 offset=4
           local.get $7
           i32.load16_u $0
           drop
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store $0 offset=4
           local.get $7
           i32.load16_u $0
           drop
          end
          local.get $4
          i32.const 1
          i32.add
          local.set $4
          br $for-loop|1
         end
        end
        local.get $3
        i32.const 1
        i32.add
        local.set $3
        br $for-loop|0
       end
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $7
      br $__inlined_func$assembly/process_all_gear_at_once/find_needed_tickets
     end
     br $folding-inner2
    end
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $6
    local.get $3
    call $assembly/Custom_Objects_2/TicketSet#toTickets
    local.tee $8
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 63
    i32.const 14688
    call $~lib/rt/__newArray
    local.tee $4
    i32.store $0 offset=24
    loop $for-loop|01
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $8
      i32.store $0
      local.get $3
      local.get $8
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
      local.tee $9
      i32.store $0 offset=28
      i32.const 0
      global.set $assembly/process_all_gear_at_once/global_ticket_was_used
      local.get $1
      global.set $assembly/process_all_gear_at_once/global_remaining_depth_limit
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      block $__inlined_func$assembly/process_all_gear_at_once/apply_ticket_to_all_gear (result i32)
       i32.const 0
       local.set $3
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       block $folding-inner02
        global.get $~lib/memory/__stack_pointer
        i32.const 15496
        i32.lt_s
        br_if $folding-inner02
        global.get $~lib/memory/__stack_pointer
        local.tee $6
        i64.const 0
        i64.store $0
        local.get $9
        global.set $assembly/process_all_gear_at_once/global_ticket
        local.get $6
        local.get $0
        i32.store $0
        local.get $6
        i32.const 14752
        i32.store $0 offset=4
        local.get $6
        i32.const 16
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 15496
        i32.lt_s
        br_if $folding-inner02
        global.get $~lib/memory/__stack_pointer
        local.tee $6
        i64.const 0
        i64.store $0
        local.get $6
        i64.const 0
        i64.store $0 offset=8
        local.get $6
        local.get $0
        i32.store $0
        local.get $6
        local.get $0
        i32.load $0 offset=12
        local.tee $10
        i32.const 42
        i32.const 0
        call $~lib/rt/__newArray
        local.tee $6
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        i32.load $0 offset=4
        local.set $11
        loop $for-loop|03
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $3
         local.get $10
         local.get $0
         i32.load $0 offset=12
         local.tee $7
         local.get $7
         local.get $10
         i32.gt_s
         select
         i32.lt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $12
          local.get $0
          i32.store $0 offset=8
          local.get $12
          local.get $3
          i32.const 2
          i32.shl
          local.tee $13
          local.get $0
          i32.load $0 offset=4
          i32.add
          i32.load $0
          local.tee $7
          i32.store $0
          local.get $12
          local.get $0
          i32.store $0 offset=8
          i32.const 3
          global.set $~argumentsLength
          local.get $12
          local.get $7
          local.get $3
          local.get $0
          i32.const 14752
          i32.load $0
          call_indirect $0 (type $i32_i32_i32_=>_i32)
          local.tee $7
          i32.store $0 offset=12
          local.get $11
          local.get $13
          i32.add
          local.get $7
          i32.store $0
          local.get $7
          if
           local.get $6
           local.get $7
           i32.const 1
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|03
         end
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $6
        br $__inlined_func$assembly/process_all_gear_at_once/apply_ticket_to_all_gear
       end
       br $folding-inner2
      end
      local.tee $3
      i32.store $0 offset=32
      global.get $assembly/process_all_gear_at_once/global_ticket_was_used
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $3
       i32.store $0
       local.get $6
       local.get $3
       local.get $1
       i32.const 1
       i32.sub
       local.get $2
       call $assembly/process_all_gear_at_once/purify_all_gear_DFS
       local.tee $6
       i32.store $0 offset=36
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
       i32.const 0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $9
        i32.store $0
        local.get $3
        local.get $6
        i32.store $0 offset=16
        local.get $3
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 15496
        i32.lt_s
        br_if $folding-inner2
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        i64.const 0
        i64.store $0
        local.get $9
        global.set $assembly/process_all_gear_at_once/global_ticket_prepend
        local.get $3
        local.get $6
        i32.store $0
        local.get $3
        i32.const 14784
        i32.store $0 offset=4
        local.get $3
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 15496
        i32.lt_s
        br_if $folding-inner2
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        i64.const 0
        i64.store $0
        i32.const 0
        local.set $3
        local.get $7
        local.get $6
        i32.store $0
        local.get $6
        i32.load $0 offset=12
        local.set $7
        loop $for-loop|02
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         local.get $3
         local.get $7
         local.get $6
         i32.load $0 offset=12
         local.tee $9
         local.get $7
         local.get $9
         i32.lt_s
         select
         i32.lt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $9
          local.get $6
          i32.store $0 offset=4
          local.get $9
          local.get $6
          i32.load $0 offset=4
          local.get $3
          i32.const 2
          i32.shl
          i32.add
          i32.load $0
          local.tee $10
          i32.store $0
          local.get $9
          local.get $6
          i32.store $0 offset=4
          i32.const 3
          global.set $~argumentsLength
          local.get $10
          local.get $3
          local.get $6
          i32.const 14784
          i32.load $0
          call_indirect $0 (type $i32_i32_i32_=>_none)
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|02
         end
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $4
        local.get $6
        call $~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/Ticket>>#concat
        local.tee $4
        i32.store $0 offset=24
       end
      end
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|01
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
    i32.const 0
    i32.const 63
    i32.const 14816
    call $~lib/rt/__newArray
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/all_gear_output_table/list_all_gear_abilities_for_each_ticket_combo~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  call $assembly/Custom_Objects_2/_Ability#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/all_gear_output_table/ticketComboPurifiesTicketSetCombo~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  i32.const 15
  i32.ne
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/Custom_Objects_2/Ticket>#filter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $3
  i32.const 0
  i32.const 34
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $0
    i32.store $0 offset=4
    local.get $6
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $4
    i32.store $0 offset=8
    local.get $6
    local.get $4
    i32.store $0 offset=4
    local.get $6
    local.get $0
    i32.store $0 offset=12
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $5
     i32.store $0 offset=4
     local.get $6
     local.get $4
     i32.store $0 offset=16
     local.get $5
     local.get $4
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/array/Array<assembly/Custom_Objects_2/Ticket>#slice@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     i32.const 0
     local.set $1
    end
    i32.const 2147483647
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $3
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $3
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $3
    local.get $1
    local.get $3
    i32.lt_s
    select
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   local.get $2
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $2
    local.get $3
    i32.add
    local.tee $2
    i32.const 0
    local.get $2
    i32.const 0
    i32.gt_s
    select
   else
    local.get $2
    local.get $3
    local.get $2
    local.get $3
    i32.lt_s
    select
   end
   local.set $3
   i32.const 0
   local.set $2
   local.get $1
   local.get $3
   local.get $4
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.tee $1
   i32.const 34
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0 offset=4
   local.set $6
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.get $4
   i32.const 2
   i32.shl
   i32.add
   local.set $0
   local.get $1
   i32.const 2
   i32.shl
   local.set $1
   loop $while-continue|0
    local.get $1
    local.get $2
    i32.gt_u
    if
     local.get $2
     local.get $6
     i32.add
     local.get $0
     local.get $2
     i32.add
     i32.load $0
     local.tee $4
     i32.store $0
     local.get $4
     if
      local.get $3
      local.get $4
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 4
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/Custom_Objects_2/TicketSet#intersection (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load16_u $0
  local.set $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.load16_u $0
  i32.and
  call $assembly/Custom_Objects_2/TicketSet.fromValue
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/TicketSet#isEmpty (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load16_u $0
  i32.eqz
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/TicketSet#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load16_u $0
  i32.const 2
  call $~lib/util/number/utoa32
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/all_gear_output_table/numTicketsUsedInTicketSetCombo (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 76
   memory.fill $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $3
    i32.const 3
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    i32.sub
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0
     local.get $4
     i32.const 1
     i32.const 38
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $5
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load $0 offset=4
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     i32.const 34
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $6
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.load $0 offset=4
     i32.store $0 offset=24
     local.get $6
     i32.const 0
     i32.const 15
     call $assembly/Custom_Objects_2/_Ticket#constructor
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i32.const 0
     i32.store $0 offset=8
     i32.const 0
     local.set $2
     i32.const 0
     local.set $1
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $7
       local.get $6
       i32.store $0
       local.get $7
       local.get $6
       local.get $1
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
       local.tee $7
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0
       i32.const 1
       local.get $7
       i32.load $0
       i32.const 15
       i32.and
       i32.shl
       local.get $2
       i32.or
       local.set $2
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $assembly/Custom_Objects_2/TicketSet#constructor
     local.tee $1
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $2
     i32.store16 $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     i32.const 0
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $4
     local.get $0
     local.get $5
     call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#concat
     local.tee $0
     i32.store $0 offset=28
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
   local.tee $1
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
   local.tee $2
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 2
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
   local.tee $3
   i32.store $0 offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 15
   call $assembly/Custom_Objects_2/_Ticket#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $assembly/Custom_Objects_2/TicketSet#contains
   i32.const 0
   i32.ne
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   i32.const 15
   call $assembly/Custom_Objects_2/_Ticket#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $assembly/Custom_Objects_2/TicketSet#contains
   i32.const 0
   i32.ne
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   i32.const 15
   call $assembly/Custom_Objects_2/_Ticket#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $3
   local.get $5
   call $assembly/Custom_Objects_2/TicketSet#contains
   i32.const 0
   i32.ne
   local.tee $5
   local.get $0
   local.get $4
   i32.add
   i32.add
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $2
   call $assembly/Custom_Objects_2/TicketSet#intersection
   local.tee $7
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   call $assembly/Custom_Objects_2/TicketSet#intersection
   local.tee $8
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   call $assembly/Custom_Objects_2/TicketSet#intersection
   local.tee $0
   i32.store $0 offset=52
   local.get $6
   i32.const 3
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 76
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 0
    return
   end
   local.get $6
   i32.const 2
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 76
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 1
    return
   end
   local.get $6
   i32.const 1
   i32.eq
   if
    local.get $5
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     call $assembly/Custom_Objects_2/TicketSet#isEmpty
    else
     i32.const 1
    end
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 76
     i32.add
     global.set $~lib/memory/__stack_pointer
     f64.const 1.5
     return
    end
    local.get $4
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     call $assembly/Custom_Objects_2/TicketSet#isEmpty
    else
     i32.const 1
    end
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 76
     i32.add
     global.set $~lib/memory/__stack_pointer
     f64.const 1.75
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 76
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 2
    return
   end
   local.get $6
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/Custom_Objects_2/TicketSet#isEmpty
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 76
     i32.add
     global.set $~lib/memory/__stack_pointer
     f64.const 2.123
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    call $assembly/Custom_Objects_2/TicketSet#isEmpty
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 76
     i32.add
     global.set $~lib/memory/__stack_pointer
     f64.const 2.75
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    call $assembly/Custom_Objects_2/TicketSet#isEmpty
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 76
     i32.add
     global.set $~lib/memory/__stack_pointer
     f64.const 2.5
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 76
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 3
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 14976
   i32.store $0 offset=64
   local.get $0
   local.get $1
   i32.store $0 offset=72
   local.get $1
   call $assembly/Custom_Objects_2/TicketSet#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=68
   i32.const 14976
   local.get $0
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=64
   local.get $2
   call $assembly/Custom_Objects_2/TicketSet#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=60
   local.get $0
   local.get $1
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=56
   local.get $3
   call $assembly/Custom_Objects_2/TicketSet#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   local.get $0
   local.get $1
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/bindings/dom/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const -1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#shift (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.const 0
  i32.le_s
  if
   i32.const 10944
   i32.const 9264
   i32.const 330
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.tee $4
  i32.load $0
  local.tee $1
  i32.store $0 offset=4
  local.get $4
  local.get $4
  i32.const 4
  i32.add
  local.get $3
  i32.const 1
  i32.sub
  local.tee $3
  i32.const 2
  i32.shl
  local.tee $5
  memory.copy $0 $0
  local.get $4
  local.get $5
  i32.add
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $3
  i32.store $0 offset=12
  local.get $2
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/all_gear_output_table/intersectTicketComboWithTicketSetCombo (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  i32.const 0
  global.set $~argumentsLength
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/Custom_Objects_2/Ticket>#slice@varargs
  local.tee $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 0
  call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#slice@varargs
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 15024
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 15024
  call $~lib/array/Array<assembly/Custom_Objects_2/Ticket>#filter
  local.tee $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 34
  i32.const 15056
  call $~lib/rt/__newArray
  local.tee $2
  i32.store $0 offset=16
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 0
   i32.gt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    i32.const 0
    i32.gt_s
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=20
    local.get $1
    i32.const 0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    i32.const 15
    call $assembly/Custom_Objects_2/_Ticket#constructor
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $3
    local.get $4
    call $assembly/Custom_Objects_2/TicketSet#contains
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     i32.const 15
     call $assembly/Custom_Objects_2/_Ticket#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $2
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#shift
     drop
    else
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=20
     local.get $1
     i32.const 0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=20
     local.get $0
     i32.const 0
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=12
     local.get $3
     local.get $4
     call $assembly/Custom_Objects_2/TicketSet#contains
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=20
      local.get $0
      call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#shift
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=12
      local.get $2
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
     end
     call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#shift
     drop
    end
    br $while-continue|0
   end
  end
  loop $while-continue|1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 0
   i32.gt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=20
    local.get $1
    i32.const 0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 15
    call $assembly/Custom_Objects_2/_Ticket#constructor
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $0
    local.get $3
    call $assembly/Custom_Objects_2/TicketSet#contains
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    i32.const 15
    call $assembly/Custom_Objects_2/_Ticket#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    local.get $2
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#shift
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/all_gear_output_table/intersectTicketComboWithBestTicketSetCombo (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $7
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $1
     i32.store $0
     local.get $3
     local.get $1
     local.get $7
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $4
     local.get $3
     i32.store $0
     local.get $4
     i32.const 14912
     i32.store $0 offset=4
     local.get $4
     local.get $3
     i32.const 14912
     call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#filter
     local.tee $9
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 14944
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.const 14944
     call $~lib/array/Array<assembly/Custom_Objects_2/Ticket>#filter
     local.tee $8
     i32.store $0 offset=12
     loop $while-continue|0
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
      i32.const 0
      i32.gt_s
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0
       local.get $8
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
       i32.const 0
       i32.gt_s
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=16
       local.get $9
       i32.const 0
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=16
       local.get $8
       i32.const 0
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=4
       local.get $4
       local.get $5
       call $assembly/Custom_Objects_2/TicketSet#contains
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $9
        i32.store $0
        i32.const 1
        global.set $~argumentsLength
        local.get $4
        local.get $9
        i32.const 1
        call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#slice@varargs
        local.tee $9
        i32.store $0 offset=8
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $8
       i32.store $0
       i32.const 1
       global.set $~argumentsLength
       local.get $4
       local.get $8
       i32.const 1
       call $~lib/array/Array<assembly/Custom_Objects_2/Ticket>#slice@varargs
       local.tee $8
       i32.store $0 offset=12
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.eqz
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $2
      i32.store $0
      local.get $4
      local.get $3
      i32.store $0 offset=8
      local.get $4
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 15496
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store $0
      block $__inlined_func$assembly/all_gear_output_table/bestTicketSetCombo
       local.get $2
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$assembly/all_gear_output_table/bestTicketSetCombo
       end
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       call $assembly/all_gear_output_table/numTicketsUsedInTicketSetCombo
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0
       local.get $3
       call $assembly/all_gear_output_table/numTicketsUsedInTicketSetCombo
       local.get $6
       f64.gt
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$assembly/all_gear_output_table/bestTicketSetCombo
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $2
       local.set $3
      end
      local.get $4
      local.get $3
      local.tee $2
      i32.store $0 offset=12
     end
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|0
    end
   end
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=8
    local.get $0
    local.get $2
    call $assembly/all_gear_output_table/intersectTicketComboWithTicketSetCombo
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u64,assembly/all_gear_output_table/GearPlan>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $3
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 57
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 268435455
   i32.gt_u
   if
    i32.const 9088
    i32.const 9264
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $3
   local.get $3
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $1
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     local.get $4
     local.get $2
     i32.const 4
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=12
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $1
      i32.store $0
      local.get $6
      local.get $5
      i32.load $0 offset=8
      local.tee $5
      i32.store $0 offset=8
      local.get $1
      local.get $0
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/all_gear_output_table/list_single_gear_abilities_for_single_ticket_combo_single_gear (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 24
   i32.const 71
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 3
   i32.store $0 offset=4
   local.get $6
   local.get $5
   i32.store $0 offset=4
   i32.const 64
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0 offset=8
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 4
   i32.store $0 offset=12
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $6
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $5
   i32.store $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0 offset=4
     local.get $2
     local.get $1
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $8
     i32.store $0 offset=8
     i32.const 0
     local.set $2
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $8
      i32.store $0 offset=12
      local.get $6
      local.get $8
      i32.load $0
      local.tee $6
      i32.store $0 offset=4
      local.get $6
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $8
       i32.store $0 offset=12
       local.get $6
       local.get $8
       i32.load $0
       local.tee $6
       i32.store $0 offset=4
       local.get $6
       local.get $2
       call $~lib/array/Array<u64>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=4
       local.get $5
       local.get $4
       call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#has
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $6
        local.get $8
        i32.store $0 offset=12
        local.get $6
        local.get $8
        i32.load $0 offset=4
        local.tee $7
        i32.store $0 offset=4
        local.get $6
        local.get $7
        local.get $2
        call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
        local.tee $6
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $0
        local.get $6
        call $assembly/all_gear_output_table/intersectTicketComboWithBestTicketSetCombo
        local.tee $6
        i32.store $0 offset=20
        local.get $6
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $9
         local.get $5
         i32.store $0 offset=4
         local.get $9
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 15496
         i32.lt_s
         br_if $folding-inner0
         global.get $~lib/memory/__stack_pointer
         local.tee $7
         i64.const 0
         i64.store $0
         local.get $7
         i32.const 8
         i32.const 55
         call $~lib/rt/itcms/__new
         local.tee $7
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.tee $10
         local.get $7
         i32.store $0 offset=4
         local.get $10
         local.get $7
         call $~lib/object/Object#constructor
         local.tee $7
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store $0 offset=4
         local.get $7
         i32.const 0
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store $0 offset=4
         local.get $7
         i32.const 0
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $9
         local.get $7
         i32.store $0 offset=28
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store $0 offset=24
         local.get $7
         local.get $3
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store $0 offset=24
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=32
         local.get $7
         local.get $6
         i32.store $0 offset=4
         local.get $6
         if
          local.get $7
          local.get $6
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store $0 offset=24
         local.get $5
         local.get $4
         local.get $7
         call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#set
        end
       end
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $5
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 8
   i32.const 56
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#keys
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/map/Map<u64,assembly/all_gear_output_table/GearPlan>#values
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<u64,~lib/array/Array<assembly/Custom_Objects_2/ExternalMap<u64,assembly/all_gear_output_table/GearPlan>>>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $3
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 60
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 268435455
   i32.gt_u
   if
    i32.const 9088
    i32.const 9264
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $3
   local.get $3
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $1
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     local.get $4
     local.get $2
     i32.const 4
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=12
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $1
      i32.store $0
      local.get $6
      local.get $5
      i32.load $0 offset=8
      local.tee $5
      i32.store $0 offset=8
      local.get $1
      local.get $0
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/all_gear_output_table/list_all_gear_abilities_for_each_ticket_combo (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 24
   i32.const 69
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 3
   i32.store $0 offset=4
   local.get $6
   local.get $5
   i32.store $0 offset=4
   i32.const 64
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0 offset=8
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 4
   i32.store $0 offset=12
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $6
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $5
   i32.store $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $6
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 14848
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i64.const 0
     i64.store $0 offset=8
     local.get $2
     local.get $6
     i32.store $0
     local.get $2
     local.get $6
     i32.load $0 offset=12
     local.tee $9
     i32.const 28
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $7
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.load $0 offset=4
     local.set $10
     i32.const 0
     local.set $2
     loop $for-loop|02
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $2
      local.get $9
      local.get $6
      i32.load $0 offset=12
      local.tee $8
      local.get $8
      local.get $9
      i32.gt_s
      select
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $6
       i32.store $0 offset=8
       local.get $8
       local.get $2
       i32.const 2
       i32.shl
       local.tee $11
       local.get $6
       i32.load $0 offset=4
       i32.add
       i32.load $0
       local.tee $12
       i32.store $0
       local.get $8
       local.get $6
       i32.store $0 offset=8
       i32.const 3
       global.set $~argumentsLength
       local.get $8
       local.get $12
       local.get $2
       local.get $6
       i32.const 14848
       i32.load $0
       call_indirect $0 (type $i32_i32_i32_=>_i32)
       local.tee $8
       i32.store $0 offset=12
       local.get $10
       local.get $11
       i32.add
       local.get $8
       i32.store $0
       local.get $8
       if
        local.get $7
        local.get $8
        i32.const 1
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|02
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=16
     local.get $7
     call $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=12
     local.get $2
     i64.load $0
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i32.const 0
     i32.const 24
     memory.fill $0
     local.get $2
     i32.const 0
     i32.const 58
     i32.const 14880
     call $~lib/rt/__newArray
     local.tee $7
     i32.store $0
     i32.const 0
     local.set $2
     loop $for-loop|04
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $7
       i32.store $0 offset=4
       local.get $8
       local.get $6
       i32.store $0 offset=12
       local.get $8
       local.get $1
       i32.store $0 offset=20
       local.get $1
       local.get $2
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=16
       local.get $6
       local.get $8
       call $assembly/all_gear_output_table/list_single_gear_abilities_for_single_ticket_combo_single_gear
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=8
       local.get $7
       local.get $8
       call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|04
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=12
     local.get $5
     local.get $4
     local.get $7
     call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#set
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $5
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 8
   i32.const 59
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/map/Map<u64,~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/TicketSet>>>#keys
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/map/Map<u64,~lib/array/Array<assembly/Custom_Objects_2/ExternalMap<u64,assembly/all_gear_output_table/GearPlan>>>#values
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/process_all_gear_at_once/purify_all_gear (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.const 40
   memory.fill $0
   local.get $5
   i32.const 0
   i32.const 42
   i32.const 14400
   call $~lib/rt/__newArray
   local.tee $8
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 61
   i32.const 14432
   call $~lib/rt/__newArray
   local.tee $9
   i32.store $0 offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
    local.get $10
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $0
     local.get $10
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
     local.tee $5
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $1
     call $assembly/process_single_gear/purify_single_gear
     local.tee $11
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     i32.const 0
     i32.const 24
     memory.fill $0
     local.get $5
     i32.const 0
     i32.const 39
     i32.const 14464
     call $~lib/rt/__newArray
     local.tee $12
     i32.store $0
     loop $for-loop|00
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0 offset=4
      local.get $11
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
      local.get $7
      i32.gt_s
      if
       i32.const 0
       local.set $6
       loop $for-loop|1
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store $0 offset=12
        local.get $11
        local.get $7
        call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
        local.set $5
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.load $0 offset=4
        local.tee $5
        i32.store $0 offset=4
        local.get $5
        call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
        local.get $6
        i32.gt_s
        if
         i32.const 0
         local.set $5
         loop $for-loop|2
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=16
          local.get $11
          local.get $7
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
          local.set $13
          global.get $~lib/memory/__stack_pointer
          local.get $13
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $13
          i32.load $0 offset=4
          local.tee $13
          i32.store $0 offset=8
          local.get $13
          local.get $6
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
          local.set $13
          global.get $~lib/memory/__stack_pointer
          local.get $13
          i32.store $0 offset=4
          local.get $13
          call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
          local.get $5
          i32.gt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $13
           local.get $11
           i32.store $0 offset=16
           local.get $11
           local.get $7
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
           local.set $14
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.load $0 offset=4
           local.tee $14
           i32.store $0 offset=8
           local.get $14
           local.get $6
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
           local.set $14
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.store $0 offset=4
           local.get $13
           local.get $14
           local.get $5
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#__get
           local.tee $13
           i32.store $0 offset=20
           global.get $~lib/memory/__stack_pointer
           local.tee $14
           local.get $13
           i32.store $0 offset=4
           local.get $14
           i32.const 14496
           i32.store $0 offset=8
           local.get $14
           local.get $13
           i32.const 14496
           call $~lib/array/Array<assembly/Custom_Objects_2/TicketSet>#filter
           local.tee $13
           i32.store $0 offset=20
           global.get $~lib/memory/__stack_pointer
           local.tee $14
           local.get $12
           i32.store $0 offset=4
           local.get $14
           local.get $13
           i32.store $0 offset=8
           local.get $12
           local.get $13
           call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
           local.get $5
           i32.const 1
           i32.add
           local.set $5
           br $for-loop|2
          end
         end
         local.get $6
         i32.const 1
         i32.add
         local.set $6
         br $for-loop|1
        end
       end
       local.get $7
       i32.const 1
       i32.add
       local.set $7
       br $for-loop|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $12
     i32.store $0 offset=8
     local.get $5
     local.get $12
     i32.store $0 offset=24
     local.get $5
     local.get $8
     i32.store $0 offset=8
     local.get $5
     local.get $12
     i32.store $0 offset=28
     local.get $8
     local.get $12
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=28
     local.get $9
     local.get $11
     call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#push
     local.get $10
     i32.const 1
     i32.add
     local.set $10
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $8
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 0
   i32.const 63
   i32.const 14528
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0
   loop $for-loop|01
    local.get $2
    local.get $4
    i32.ge_s
    if
     block $for-break0
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $8
      i32.store $0 offset=4
      local.get $5
      local.get $8
      local.get $4
      local.get $3
      call $assembly/process_all_gear_at_once/purify_all_gear_DFS
      local.tee $5
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#get:length
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $0
       i32.store $0 offset=4
       local.get $6
       local.get $5
       i32.store $0 offset=12
       local.get $6
       local.get $0
       local.get $5
       call $~lib/array/Array<~lib/array/Array<assembly/Custom_Objects_2/Ticket>>#concat
       local.tee $0
       i32.store $0
       local.get $3
       i32.eqz
       br_if $for-break0
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|01
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $9
   call $assembly/all_gear_output_table/list_all_gear_abilities_for_each_ticket_combo
   local.tee $0
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/object/Object#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 9088
   i32.const 9136
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 2
  i32.shl
  local.tee $4
  i32.const 1
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $2
  if
   local.get $3
   local.get $2
   local.get $4
   memory.copy $0 $0
  end
  local.get $5
  local.get $3
  i32.store $0
  i32.const 16
  local.get $1
  call $~lib/rt/itcms/__new
  local.tee $1
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $1
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $4
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2
  i32.lt_s
  local.get $1
  i32.const 36
  i32.gt_s
  i32.or
  if
   i32.const 12160
   i32.const 12288
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 12352
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $0
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $0
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $0
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $0
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $0
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $1
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   loop $while-continue|0
    local.get $0
    i32.const 10000
    i32.ge_u
    if
     local.get $0
     i32.const 10000
     i32.rem_u
     local.set $5
     local.get $0
     i32.const 10000
     i32.div_u
     local.set $0
     local.get $3
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $5
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 12364
     i32.add
     i64.load32_u $0
     local.get $5
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 12364
     i32.add
     i64.load32_u $0
     i64.const 32
     i64.shl
     i64.or
     i64.store $0
     br $while-continue|0
    end
   end
   local.get $0
   i32.const 100
   i32.ge_u
   if
    local.get $3
    local.get $1
    i32.const 2
    i32.sub
    local.tee $1
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 12364
    i32.add
    i32.load $0
    i32.store $0
    local.get $0
    i32.const 100
    i32.div_u
    local.set $0
   end
   local.get $0
   i32.const 10
   i32.ge_u
   if
    local.get $3
    local.get $1
    i32.const 2
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    i32.const 2
    i32.shl
    i32.const 12364
    i32.add
    i32.load $0
    i32.store $0
   else
    local.get $3
    local.get $1
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    i32.const 48
    i32.add
    i32.store16 $0
   end
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.tee $1
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    local.get $0
    i64.extend_i32_u
    local.set $2
    loop $while-continue|01
     local.get $1
     i32.const 2
     i32.ge_u
     if
      local.get $3
      local.get $1
      i32.const 2
      i32.sub
      local.tee $1
      i32.const 1
      i32.shl
      i32.add
      local.get $2
      i32.wrap_i64
      i32.const 255
      i32.and
      i32.const 2
      i32.shl
      i32.const 12784
      i32.add
      i32.load $0
      i32.store $0
      local.get $2
      i64.const 8
      i64.shr_u
      local.set $2
      br $while-continue|01
     end
    end
    local.get $1
    i32.const 1
    i32.and
    if
     local.get $3
     local.get $2
     i32.wrap_i64
     i32.const 6
     i32.shl
     i32.const 12784
     i32.add
     i32.load16_u $0
     i32.store16 $0
    end
   else
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~lib/util/number/ulog_base (result i32)
     local.get $0
     i64.extend_i32_u
     local.set $4
     local.get $1
     i32.popcnt
     i32.const 1
     i32.eq
     if
      i32.const 63
      local.get $4
      i64.clz
      i32.wrap_i64
      i32.sub
      i32.const 31
      local.get $1
      i32.clz
      i32.sub
      i32.div_u
      i32.const 1
      i32.add
      br $__inlined_func$~lib/util/number/ulog_base
     end
     local.get $1
     i64.extend_i32_s
     local.tee $6
     local.set $2
     i32.const 1
     local.set $3
     loop $while-continue|03
      local.get $2
      local.get $4
      i64.le_u
      if
       local.get $4
       local.get $2
       i64.div_u
       local.set $4
       local.get $2
       local.get $2
       i64.mul
       local.set $2
       local.get $3
       i32.const 1
       i32.shl
       local.set $3
       br $while-continue|03
      end
     end
     loop $while-continue|1
      local.get $4
      i64.const 0
      i64.ne
      if
       local.get $4
       local.get $6
       i64.div_u
       local.set $4
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $while-continue|1
      end
     end
     local.get $3
     i32.const 1
     i32.sub
    end
    local.tee $5
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    local.get $0
    i64.extend_i32_u
    local.set $2
    local.get $1
    i64.extend_i32_s
    local.set $4
    local.get $1
    local.get $1
    i32.const 1
    i32.sub
    i32.and
    if
     loop $do-loop|1
      local.get $3
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.const 1
      i32.shl
      i32.add
      local.get $2
      local.get $4
      local.get $2
      local.get $4
      i64.div_u
      local.tee $2
      i64.mul
      i64.sub
      i32.wrap_i64
      i32.const 1
      i32.shl
      i32.const 13840
      i32.add
      i32.load16_u $0
      i32.store16 $0
      local.get $2
      i64.const 0
      i64.ne
      br_if $do-loop|1
     end
    else
     local.get $1
     i32.ctz
     i32.const 7
     i32.and
     i64.extend_i32_s
     local.set $6
     local.get $4
     i64.const 1
     i64.sub
     local.set $4
     loop $do-loop|0
      local.get $3
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.const 1
      i32.shl
      i32.add
      local.get $2
      local.get $4
      i64.and
      i32.wrap_i64
      i32.const 1
      i32.shl
      i32.const 13840
      i32.add
      i32.load16_u $0
      i32.store16 $0
      local.get $2
      local.get $6
      i64.shr_u
      local.tee $2
      i64.const 0
      i64.ne
      br_if $do-loop|0
     end
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/index/get_ability (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i64.const 0
    i64.store $0
    local.get $3
    i64.const 0
    i64.store $0 offset=8
    local.get $3
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 15496
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 0
    i32.store $0
    local.get $3
    global.get $assembly/params/const_max_brand_num
    local.tee $3
    i32.store $0
    local.get $3
    local.get $1
    call $~lib/typedarray/Uint32Array#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    local.get $0
    i32.const 13
    i32.shl
    i32.xor
    local.tee $0
    local.get $0
    i32.const 17
    i32.shr_u
    i32.xor
    local.tee $0
    local.get $0
    i32.const 5
    i32.shl
    i32.xor
    local.tee $0
    local.get $3
    i32.rem_u
    local.get $1
    call $assembly/index/weighted_ability
    local.set $3
    local.get $2
    i32.const -1
    i32.ne
    if
     local.get $0
     i32.const 100
     i32.rem_u
     i32.const 29
     i32.le_u
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 2
      i32.const 30
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load $0 offset=4
      i32.store $0 offset=4
      local.get $1
      i32.const 0
      local.get $2
      call $~lib/array/Array<u32>#__set
      br $folding-inner1
     end
     local.get $0
     local.get $0
     i32.const 13
     i32.shl
     i32.xor
     local.tee $0
     local.get $0
     i32.const 17
     i32.shr_u
     i32.xor
     local.tee $0
     local.get $0
     i32.const 5
     i32.shl
     i32.xor
     local.tee $0
     local.get $1
     local.get $2
     call $assembly/params/max_brand_num_drink
     i32.rem_u
     local.get $1
     local.get $2
     call $assembly/params/max_brand_num_drink
     i32.rem_u
     local.set $4
     i32.const -1
     local.set $3
     loop $while-continue|0
      local.get $4
      i32.const 0
      i32.ge_s
      if
       local.get $4
       local.get $3
       i32.const 1
       i32.add
       local.tee $3
       local.get $2
       i32.eq
       if (result i32)
        i32.const 0
       else
        local.get $1
        local.get $3
        call $assembly/params/get_ability_weight
       end
       i32.sub
       local.set $4
       br $while-continue|0
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 30
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $1
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load $0 offset=4
    i32.store $0 offset=12
    local.get $1
    i32.const 0
    local.get $3
    call $~lib/array/Array<u32>#__set
    br $folding-inner1
   end
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  local.get $0
  call $~lib/array/Array<u32>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/Custom_Objects_2/ExternalGear#get:desired_abilities (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0
  local.get $0
  i32.eqz
  if
   i32.const 9344
   i32.const 14048
   i32.const 31
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/Custom_Objects_2/InternalGear#get:desired_abilities (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 15496
  i32.lt_s
  if
   i32.const 48288
   i32.const 48336
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0
  local.get $0
  i32.eqz
  if
   i32.const 9344
   i32.const 14048
   i32.const 43
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/index/AbilityComboToValue (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   block $__inlined_func$assembly/index/AbilityComboToValue (result i64)
    local.get $3
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i32.const 0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     i32.const 13936
     i32.store $0 offset=8
     local.get $3
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 15496
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.load $0 offset=12
     local.tee $7
     i32.const 28
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     i32.load $0 offset=4
     local.set $3
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $1
      local.get $7
      local.get $0
      i32.load $0 offset=12
      local.tee $4
      local.get $4
      local.get $7
      i32.gt_s
      select
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $0
       i32.store $0 offset=12
       local.get $1
       i32.const 2
       i32.shl
       local.tee $4
       local.get $0
       i32.load $0 offset=4
       i32.add
       i32.load $0
       local.set $6
       local.get $8
       local.get $0
       i32.store $0 offset=8
       i32.const 3
       global.set $~argumentsLength
       local.get $8
       local.get $6
       local.get $1
       local.get $0
       i32.const 13936
       i32.load $0
       call_indirect $0 (type $i32_i32_i32_=>_i32)
       local.tee $6
       i32.store $0 offset=16
       local.get $3
       local.get $4
       i32.add
       local.get $6
       i32.store $0
       local.get $6
       if
        local.get $5
        local.get $6
        i32.const 1
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $assembly/Custom_Objects_2/_SixteenAbilityCombo#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i64.load $0
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     br $__inlined_func$assembly/index/AbilityComboToValue
    end
    br $folding-inner1
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/process_single_gear/purify_single_gear@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 20
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $1
   call $assembly/process_single_gear/purify_single_gear
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/process_all_gear_at_once/purify_all_gear@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0
   local.get $4
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15496
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $3of3
    block $2of3
     block $1of3
      block $0of3
       block $outOfRange
        global.get $~argumentsLength
        i32.const 1
        i32.sub
        br_table $0of3 $1of3 $2of3 $3of3 $outOfRange
       end
       unreachable
      end
      i32.const 20
      local.set $1
     end
     i32.const 5
     local.set $2
    end
    i32.const 0
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/process_all_gear_at_once/purify_all_gear
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48288
  i32.const 48336
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 8640
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load $0 offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)
